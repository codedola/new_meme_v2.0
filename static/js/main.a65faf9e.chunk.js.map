{"version":3,"sources":["utilities/parseJwt.js","utilities/Storage.js","services/api.js","services/postService.js","services/userService.js","store/app/actions.js","store/user/actions.js","store/post/actions.js","store/post/reducer.js","services/categoryService.js","store/category/actions.js","store/category/reducer.js","services/commentService.js","store/comment/actions.js","store/comment/reducer.js","services/authService.js","store/auth/actions.js","store/auth/reducer.js","store/user/reducer.js","store/app/reducer.js","store/rootReducers.js","store/index.js","constants/paths.js","constants/imageDefault.js","utilities/hook/useDateTime.js","utilities/hook/useIcons.js","utilities/hook/useAuth.js","utilities/hook/useUserID.js","utilities/hook/usePostPaging.js","utilities/hook/useCheckImageUrl.js","components/Post/Post.Item.js","components/Post/Post.List.js","components/Post/Post.Recent.js","components/Loading/index.js","components/Loading/Loading.js","components/OnToTop/index.js","pages/HomePage/index.js","pages/HomePage/HomePage.js","constants/FormValidator.js","components/Login/Login.Form.js","pages/Login/index.js","pages/Login/Login.js","utilities/hook/useNotAuth.js","components/PageNotFound/UniSVG.js","components/PageNotFound/index.js","pages/PostCategories/index.js","pages/PostCategories/PostCategories.js","components/Post/Post.Comment.Form.js","store/comment/selector/listCommentSort.js","components/Post/Post.Comment.Item.js","components/Post/Post.Comment.List.js","pages/PostDetail/index.js","pages/PostDetail/PostDetail.js","components/Profile/Profile.Avatar.js","components/Profile/Profile.Title.js","components/Profile/Profile.Form.js","pages/UserProfile/index.js","pages/UserProfile/UserProfile.js","pages/SearchResult/index.js","pages/SearchResult/SearchResult.js","components/UserDetail/UserDetail.Info.js","components/UserDetail/UserDetail.Post.js","pages/UserDetail/index.js","pages/UserDetail/UserDetail.js","pages/ChangePassWord/index.js","pages/ChangePassWord/ChangePassWord.js","pages/Register/index.js","pages/Register/Register.js","components/PostUpload/PostUpload.Modal.js","components/LoadingChange/index.js","components/LoadingChange/Loading.js","pages/PostUpload/PostUpload.js","pages/PostUpload/index.js","components/PostEdit/PostEdit.Form.js","pages/PostEdit/index.js","pages/PostEdit/PostEdit.js","pages/PostDelete/index.js","pages/PostDelete/PostDelete.js","components/Dashboard/Dashboard.Form.js","store/user/selector/listMemberSearchSort.js","components/Dashboard/Dashboard.Table.js","components/Dashboard/Dashboard.Modal.js","pages/Dashboard/index.js","pages/Dashboard/Dashboard.js","utilities/hook/useAdmin.js","routers/index.js","components/Shared/Notification/index.js","components/Header/Header.Nav.js","components/Header/Header.Search.js","components/LogoApp/index.js","components/Header/index.js","components/Header/Header.js","components/Footer/index.js","App.js","reportWebVitals.js","index.js"],"names":["parseJwt","token","base64","split","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","KEY_TOKEN","Storage","setToken","localStorage","setItem","getToken","getItem","parseObj","id","removeItem","error","removeToken","BASE_URL","window","location","protocol","api","axios","create","baseURL","headers","Authorization","PostService","currPage","pagesize","restParams","get","params","postid","query","userid","accept","formData","post","UserService","nameSpace","SHOW_LOADING","HIDE_LOADING","actShowLoading","type","actHideLoading","ACT_FETCH_CURRENT_USER","ACT_SET_USER_DETAIL","ACT_FETCH_LIST_MEMBER","ACT_ACTIVE_DEACTIVE_MEMBER","ACT_CHANGE_SEARCH_TEXT","ACT_ON_SELECT_SORT","actActiveDeactiveMember","currentStatus","payload","actFetchCurrentUser","user","actSetUserDetailData","userInfo","userPosts","actFetchListMember","users","total","actFetchUserByIDAsync","dispatch","a","response","data","status","message","ok","actFetchListMemberAsync","body","totalMember","Number","ACT_FETCH_LIST_POST","ACT_FETCH_POST_DETAIL","ACT_DELETE_POST","ACT_ACTIVE_DEACTIVE_POST","ACT_SET_POSTS_RECENTS","actSetPostRecent","posts","actFetchListPost","actFetchPostDetail","categories","actDeletePost","actActiveDeactivePost","actFetchListPostAsync","actFetchPostDetailAsync","resPost","USERID","resUser","initState","PostPaging","list","PostRecentCurrUser","PostDetail","PostEdit","CategoryService","tagIndex","ACT_FETCH_LIST_POST_CATEGORY","ACT_FETCH_CATEGORIES","actFetchListPostCategory","actFetchCategories","actFetchListPostCategoryAsync","listCategories","CommentService","comment","ACT_FETCH_COMMENTS","ACT_ON_SELECT_SORT_COMMENT","actFetchComments","comments","actFetchCommentAsync","pagesze","PostComments","orderBy","orderDir","AuthService","email","password","fullname","repassword","oldPassword","newPassword","reNewPassword","ACT_FETH_LOGIN","ACT_LOGOUT_SUCCESS","actFetchLogin","actLogoutSuccess","currentUser","members","usersDeactive","searchText","isLoading","rootReducers","combineReducers","Posts","statePost","action","postRecent","postLength","length","Categories","stateCategory","Comments","stateComment","Auth","stateAuth","User","stateUser","postDeleteID","userID","newPost","filter","PID","postActive","userIdActive","newListMember","member","newText","App","stateApp","Store","createStore","applyMiddleware","thunkMiddle","PATHS","HOMEPAGE","CHANGE_PASSWORD","LOGIN","SEARCH_RESULT","POST_CREATE","POST_EDIT","POST_DELETE","POST_DETAIL","POST_LIST_CATEGORY","REGISTER","USER_DETAIL","USER_PROFILE","ADMIN_DASHBOARD","ImgDefault","avatar","useDateTime","date_time","createdDate","dayjs","createdDateStr","format","currentDate","relativeTimeStr","from","locale","extend","relativeTime","useIcons","Reply","icon","faReply","ThumbsUp","faThumbsUp","ThumbsDown","faThumbsDown","Flag","faFlag","GlobeAmericas","faGlobeAmericas","Share","faShare","CommentAlt","faCommentAlt","Camera","faCamera","Upload","faUpload","EllipsisH","faEllipsisH","Edit","faEdit","TrashAlt","faTrashAlt","Lock","faLock","Tasks","faTasks","SortAmountUp","faSortAmountUp","SortAmountDown","faSortAmountDown","Unlock","faUnlock","UsersCog","faUserCog","SettingUser","faCog","useAuth","history","useHistory","useLocation","useSelector","state","useEffect","push","useUserID","useMemo","usePostPaging","actFetchAsync","keyFieldReducer","useState","loadMore","setLoadMore","useDispatch","page","isLoadMore","handleLoadMore","useCallback","finally","useCheckImageUrl","url","match","PostItem","isPostDetail","isPostRecent","isSkeletonCard","restProps","dateTime","Icons","currentUserID","avatarElement","useRef","useRouteMatch","fullnamePost","idxDefaultAvatar","IMAGE_DEFAULT","linkPostDetail","linkUserDetail","parsed","queryString","search","q","toLowerCase","renderFullName","to","className","dangerouslySetInnerHTML","__html","renderContent","post_content","onClick","created","time_added","userAvatar","profilepicture","blogImg","url_image","postID","activePost","categoryValue","tag_value","idxDefaultPost","urlImg","ref","src","alt","ListGroup","Item","Promise","all","resPostUserID","resPostList","actActiveDeactivePostAsync","then","res","NotificationManager","success","count","Badge","variant","category","tag_index","linkCategory","width","height","PostList","classString","classRow","trim","index","classCol","PostRecent","postsRecent","matchHomepage","isExact","getState","Card","Body","Text","LoadingPage","document","querySelector","classList","toggle","xmlns","xmlnsXlink","style","margin","display","viewBox","preserveAspectRatio","cx","cy","r","fill","stroke","strokeWidth","attributeName","repeatCount","dur","values","keyTimes","keySplines","calcMode","begin","OnToTop","handleOnToTop","scrollTo","top","behavior","faAngleDoubleUp","HomePage","loadingFirst","setLoadingFirst","permission","listPostActiveAdmin","listFilterActive","listPostActiveUser","Container","Row","Col","lg","Button","disabled","Spinner","as","animation","size","role","aria-hidden","FULLNAME_VALIDATOR","EMAIL_VALIDATOR","pattern","messRequired","messInvalid","PASSWORD_VALIDATOR","LoginForm","handleLogin","showPassword","setShowPassword","useForm","register","handleSubmit","errors","formState","handleShowPassword","onSubmit","initForm","placeholder","required","faEyeSlash","faEye","Login","useNotAuth","injectedPropsLoginFrom","console","log","actFetchLoginAsync","UniSVG","version","d","strokeMiterlimit","strokeLinecap","opacity","x1","y1","x2","y2","clipPath","strokeLinejoin","transform","rx","ry","points","md","PostCategories","category_id","useParams","loadPage","setLoadPage","PostCommentForm","handleCreateComment","avatarUser","setComment","Form","Group","Control","value","onChange","e","target","preventDefault","listCommentSort","createSelector","listComments","sort","b","indexNumber","PostCommentItem","dateTimeHook","userName","contentComment","linkUser","PostCommentList","isHasComments","orderDirLocal","setOrderDirLocal","orderByLocal","setOrderByLocal","actOnSelectSortCommnet","onChangeSelect","onChangeTypeSort","keyField","post_id","setLoading","matchPostDetail","userLink","actCreateNewCommentAsync","Img","Title","description","avatarDefault","ProfileAvatar","onShowInputFile","ProfileTitle","ProfileForm","onChangeData","onChangeImage","gender","name","cols","rows","UserProfile","checkImageUrl","setUserInfo","objFileAvatar","setObjFileAvatar","injectedPropsForm","file","files","preview","getElementById","reader","FileReader","onloadend","result","readAsDataURL","FormData","append","actUpdateProfileAsync","injectedPropsAvatar","inputFile","click","SearchResult","setPosts","querySearch","actFetchListSearchAsync","listPostActive","UserDetailInfo","countPost","faBook","faPaperPlane","faUserCheck","UserDetailPost","UserDetail","currUserID","user_id","resPostUser","resInfoUser","actFetchPostUserByIDAsync","ChangePassWord","old","new","reNew","showValue","setShowValue","handleShowValue","handleChangePassword","passwordInfo","actChangePasswordAsync","Register","handleRegister","registerInfo","actRegisterAsync","minLength","PostUploadModal","show","handleClose","categoriesPostEdit","getCategoriesNewPost","catePost","setCatePost","hashCategorisPostEdit","catePostEdit","Modal","onHide","Header","closeButton","keyName","text","xs","Check","valueChecked","checked","hasOwnProperty","custom","inline","label","Footer","LoadingChange","loadingEle","overflow","background","initNewPost","obj_image","imageNotAvailable","PostUpload","previewImage","setShow","setNewPost","categoriesNewPost","setCategoriesNewPost","handleChangeData","justifyContent","controlId","File","current","horizontal","faImages","faPaw","block","actCreateNewPostAsync","Object","entries","listNameCategoris","listIdCategories","PostEditForm","postEdit","handleShow","handleChangeImage","handleUploadEditPost","isEdit","setIsEdit","setPostEdit","setCategoriesPostEdit","cateID","injectedPropsEditForm","actEditPostAsync","newCategoriesPostEdit","listNewIdCates","PostDelete","actDeletePostAsync","DashboardForm","handleSetEdit","localText","setLocalText","handleClearText","actionHandleOnSelectSort","InputGroup","FormControl","aria-label","aria-describedby","Append","listMembersSearchAndSort","listMembers","memberName","toLocaleLowerCase","searchName","DashboardTable","setInfoUserEdit","listMemberSearchSort","Table","striped","bordered","hover","textAlign","DashboardModal","userEdit","showModal","setShowModal","isActiveUser","closeMoldalUserEdit","centered","padding","Alert","actActiveDeactiveUserAsync","Dashboard","isAdmin","useAdmin","setUserEdit","handleLoadMoreMember","propsDashboardForm","propsDashboardTable","propsDashboardModal","ROUTERS","path","exact","Component","Notification","HeaderNav","matchCategory","modalShow","setModalShow","handleOnChangeCategory","currCateID","HeaderSearch","setQuerySearch","faSearch","LogoApp","handleLogout","route","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","store"],"mappings":"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","file":"static/js/main.a65faf9e.chunk.js","sourcesContent":["function parseJwt(token) {\r\n    var base64Url = token.split(\".\")[1];\r\n    var base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n    var jsonPayload = decodeURIComponent(\r\n        atob(base64)\r\n            .split(\"\")\r\n            .map(function (c) {\r\n                return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\r\n            })\r\n            .join(\"\")\r\n    );\r\n\r\n    return JSON.parse(jsonPayload);\r\n}\r\n\r\nexport default parseJwt;\r\n","import parseJwt from \"./parseJwt\";\r\nexport const KEY_TOKEN = \"MEME_TOKEN\";\r\n\r\nconst Storage = {\r\n    setToken(token) {\r\n        localStorage.setItem(KEY_TOKEN, token);\r\n    },\r\n    getToken() {\r\n        const token = localStorage.getItem(KEY_TOKEN);\r\n        try {\r\n            const parseObj = parseJwt(token);\r\n            if (parseObj && parseObj.id) {\r\n                return token;\r\n            } else {\r\n                localStorage.removeItem(KEY_TOKEN);\r\n                return \"\";\r\n            }\r\n        } catch (error) {\r\n            localStorage.removeItem(KEY_TOKEN);\r\n            return \"\";\r\n        }\r\n    },\r\n\r\n    removeToken() {\r\n        const token = localStorage.getItem(KEY_TOKEN);\r\n        if (token) {\r\n            localStorage.setItem(KEY_TOKEN, \"\");\r\n        }\r\n    },\r\n};\r\n\r\nexport default Storage;\r\n","import axios from \"axios\";\r\nimport Storage from \"../utilities/Storage\";\r\n\r\nconst BASE_URL = `${window.location.protocol}//api-meme-zendvn-01.herokuapp.com/api`;\r\n\r\nconst api = {\r\n    call() {\r\n        return axios.create({\r\n            baseURL: BASE_URL,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        });\r\n    },\r\n\r\n    callWithAuth({ headers = {} } = {}) {\r\n        const token = Storage.getToken();\r\n        return axios.create({\r\n            baseURL: BASE_URL,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n                ...headers,\r\n            },\r\n        });\r\n    },\r\n};\r\n\r\nexport { api };\r\n","import { api } from \"./api\";\r\n\r\nexport const PostService = {\r\n    getList({ currPage = 1, pagesize = 3, ...restParams } = {}) {\r\n        return api.call().get(\"/post/getListPagination.php\", {\r\n            params: {\r\n                currPage,\r\n                pagesize,\r\n                ...restParams,\r\n            },\r\n        });\r\n    },\r\n    getPostDetail({ postid, ...restParams }) {\r\n        return api.call().get(\"/post/post.php\", {\r\n            params: {\r\n                postid,\r\n                ...restParams,\r\n            },\r\n        });\r\n    },\r\n    getPostByUserID({ userid, ...restParams }) {\r\n        return api.call().get(\"/post/getListPostUserID.php\", {\r\n            params: {\r\n                userid,\r\n                ...restParams,\r\n            },\r\n        });\r\n    },\r\n    searchListNews({ query }) {\r\n        return api.call().get(\"/post/search.php\", {\r\n            params: {\r\n                query,\r\n            },\r\n        });\r\n    },\r\n    getListPostUserID({ userid }) {\r\n        const headers = {\r\n            accept: \"multipart/form-data\",\r\n        };\r\n        return api\r\n            .callWithAuth({ headers })\r\n            .get(\"/post/getListPostUserID.php\", {\r\n                params: {\r\n                    userid,\r\n                },\r\n            });\r\n    },\r\n    createNewPost(formData) {\r\n        const headers = {\r\n            accept: \"multipart/form-data\",\r\n        };\r\n        return api.callWithAuth({ headers }).post(\"/post/addNew.php\", formData);\r\n    },\r\n\r\n    editPost(formData) {\r\n        const headers = {\r\n            accept: \"multipart/form-data\",\r\n        };\r\n        return api.callWithAuth({ headers }).post(\"/post/edit.php\", formData);\r\n    },\r\n    deletePost({ postid }) {\r\n        return api.callWithAuth().post(\"/post/delete.php\", { postid });\r\n    },\r\n    activeDeactivePost({ postid }) {\r\n        return api.callWithAuth().post(\"/post/activeDeactive.php\", { postid });\r\n    },\r\n};\r\n","import { api } from \"./api\";\r\nexport const UserService = {\r\n    getUserByID({ userid, ...restParams }) {\r\n        return api.call().get(\"/member/member.php\", {\r\n            params: {\r\n                userid,\r\n                ...restParams,\r\n            },\r\n        });\r\n    },\r\n\r\n    updateProfile(formData) {\r\n        const headers = {\r\n            accept: \"multipart/form-data\",\r\n        };\r\n        return api\r\n            .callWithAuth({ headers })\r\n            .post(\"/member/update.php\", formData);\r\n    },\r\n    getListMember({ pagesize = 10, currPage = 1, ...restParams } = {}) {\r\n        return api.callWithAuth().get(\"/member/getListPaging.php\", {\r\n            params: {\r\n                pagesize,\r\n                currPage,\r\n                ...restParams,\r\n            },\r\n        });\r\n    },\r\n    activeDeactiveUser({ userid }) {\r\n        return api\r\n            .callWithAuth()\r\n            .post(\"/member/activeDeactive.php\", { userid });\r\n    },\r\n};\r\n","const nameSpace = \"app:\";\r\nexport const SHOW_LOADING = `${nameSpace}SHOW_LOADING`;\r\nexport const HIDE_LOADING = `${nameSpace}HIDE_LOADING`;\r\n\r\nexport const actShowLoading = () => {\r\n    return {\r\n        type: SHOW_LOADING,\r\n    };\r\n};\r\n\r\nexport const actHideLoading = () => {\r\n    return {\r\n        type: HIDE_LOADING,\r\n    };\r\n};\r\n","import { UserService } from \"../../services/userService\";\r\nimport { PostService } from \"../../services/postService\";\r\nimport { actHideLoading, actShowLoading } from \"../app/actions\";\r\nimport { actFetchListPostAsync } from \"../post/actions\";\r\n//\r\nconst nameSpace = \"user:\";\r\nexport const ACT_FETCH_CURRENT_USER = `${nameSpace}ACT_FETCH_CURRENT_USER`;\r\nexport const ACT_FETCH_USER_BY_ID = `${nameSpace}ACT_FETCH_USER_BY_ID`;\r\nexport const ACT_SET_USER_DETAIL = `${nameSpace}ACT_SET_USER_DETAIL`;\r\nexport const ACT_FETCH_LIST_MEMBER = `${nameSpace}ACT_FETCH_LIST_MEMBER`;\r\nexport const ACT_ACTIVE_DEACTIVE_MEMBER = `${nameSpace}ACT_ACTIVE_DEACTIVE_MEMBER`;\r\nexport const ACT_CHANGE_SEARCH_TEXT = `${nameSpace}ACT_CHANGE_SEARCH_TEXT`;\r\nexport const ACT_ON_SELECT_SORT = `${nameSpace}ACT_ON_SELECT_SORT`;\r\n\r\n// Action\r\nexport const actHandleChangeSearchText = (newText) => {\r\n    return {\r\n        type: ACT_CHANGE_SEARCH_TEXT,\r\n        payload: {\r\n            newText,\r\n        },\r\n    };\r\n};\r\n\r\nexport const actionHandleOnSelectSort = ({ orderBy, orderDir }) => {\r\n    return {\r\n        type: ACT_ON_SELECT_SORT,\r\n        payload: {\r\n            orderBy,\r\n            orderDir,\r\n        },\r\n    };\r\n};\r\n\r\nexport const actActiveDeactiveMember = ({ userid, currentStatus }) => {\r\n    return {\r\n        type: ACT_ACTIVE_DEACTIVE_MEMBER,\r\n        payload: { userid, currentStatus },\r\n    };\r\n};\r\n\r\nexport const actFetchCurrentUser = ({ user }) => {\r\n    return {\r\n        type: ACT_FETCH_CURRENT_USER,\r\n        payload: {\r\n            user,\r\n        },\r\n    };\r\n};\r\n\r\nexport const actSetUserDetailData = ({ userInfo, userPosts }) => {\r\n    return {\r\n        type: ACT_SET_USER_DETAIL,\r\n        payload: {\r\n            userInfo,\r\n            userPosts,\r\n        },\r\n    };\r\n};\r\n\r\nexport const actFetchListMember = ({ users, pagesize, currPage, total }) => {\r\n    return {\r\n        type: ACT_FETCH_LIST_MEMBER,\r\n        payload: { users, pagesize, currPage, total },\r\n    };\r\n};\r\n// Action Async\r\nexport const actFetchUserByIDAsync = ({ userid }) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await UserService.getUserByID({ userid });\r\n\r\n            if (response.data.status === 200) {\r\n                const { user, message } = response.data;\r\n                dispatch(actFetchCurrentUser({ user }));\r\n                return {\r\n                    ok: true,\r\n                    message,\r\n                };\r\n            } else {\r\n                return {\r\n                    ok: false,\r\n                    message: \"Co loi xay ra\",\r\n                };\r\n            }\r\n        } catch (error) {}\r\n    };\r\n};\r\nexport const actFetchPostUserByIDAsync = ({ userid }) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const state = getState();\r\n            if (state.User.userInfo[userid] && state.User.userPosts[userid]) {\r\n                return {\r\n                    ok: true,\r\n                    user: state.User.userInfo[userid],\r\n                    posts: state.User.userPosts[userid],\r\n                };\r\n            } else {\r\n                dispatch(actShowLoading());\r\n                const [resPostUser, resInfoUser] = await Promise.all([\r\n                    PostService.getListPostUserID({ userid }),\r\n                    UserService.getUserByID({ userid }),\r\n                ]);\r\n                dispatch(actHideLoading());\r\n\r\n                if (\r\n                    resPostUser?.data?.status === 200 &&\r\n                    resInfoUser?.data?.status === 200\r\n                ) {\r\n                    const user = resInfoUser.data.user;\r\n                    const posts = resPostUser.data.posts;\r\n                    dispatch(\r\n                        actSetUserDetailData({\r\n                            userInfo: user,\r\n                            userPosts: posts,\r\n                        })\r\n                    );\r\n                    return {\r\n                        ok: true,\r\n                        user,\r\n                        posts,\r\n                    };\r\n                } else {\r\n                    return {\r\n                        ok: false,\r\n                        message: \"Có lỗi xảy ra\",\r\n                    };\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.log(\"chay vao catch error\");\r\n        }\r\n    };\r\n};\r\n\r\nexport const actUpdateProfileAsync = ({\r\n    avatar,\r\n    fullname,\r\n    gender,\r\n    description,\r\n}) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const formData = new FormData();\r\n\r\n            formData.append(\"fullname\", fullname);\r\n            formData.append(\"gender\", gender);\r\n            formData.append(\"description\", description);\r\n            if (avatar) {\r\n                formData.append(\"avatar\", avatar);\r\n            }\r\n\r\n            const response = await UserService.updateProfile(formData);\r\n            if (response?.data?.status === 200) {\r\n                const { user } = response.data;\r\n                await dispatch(actFetchListPostAsync());\r\n\r\n                const res = await PostService.getListPostUserID({\r\n                    userid: user.USERID,\r\n                });\r\n\r\n                dispatch(actFetchCurrentUser({ user }));\r\n                dispatch(\r\n                    actSetUserDetailData({\r\n                        userInfo: user,\r\n                        userPosts:\r\n                            res?.data?.status === 200 ? res.data.posts : null,\r\n                    })\r\n                );\r\n\r\n                return {\r\n                    ok: true,\r\n                    message: \"Update thành công\",\r\n                };\r\n            } else {\r\n                return {\r\n                    ok: false,\r\n                    message: \"Update thất bại\",\r\n                };\r\n            }\r\n        } catch (error) {\r\n            return {\r\n                ok: false,\r\n                error,\r\n            };\r\n        }\r\n    };\r\n};\r\n\r\nexport const actFetchListMemberAsync = ({\r\n    pagesize = 100,\r\n    currPage = 1,\r\n    ...restParams\r\n} = {}) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(actShowLoading());\r\n            const response = await UserService.getListMember({\r\n                pagesize,\r\n                currPage,\r\n                ...restParams,\r\n            });\r\n            dispatch(actHideLoading());\r\n\r\n            if (response?.data?.status === 200) {\r\n                const { users, total } = response.data.body;\r\n                const totalMember = Number(total);\r\n                dispatch(\r\n                    actFetchListMember({\r\n                        users,\r\n                        total: totalMember,\r\n                        pagesize,\r\n                        currPage,\r\n                    })\r\n                );\r\n            }\r\n        } catch (error) {\r\n            dispatch(actHideLoading());\r\n        }\r\n    };\r\n};\r\n\r\nexport const actActiveDeactiveUserAsync = ({ userid, currentStatus }) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(actShowLoading());\r\n            const response = await UserService.activeDeactiveUser({ userid });\r\n\r\n            dispatch(actHideLoading());\r\n            if (response?.data?.status === 200) {\r\n                dispatch(actActiveDeactiveMember({ userid, currentStatus }));\r\n\r\n                return {\r\n                    ok: true,\r\n                    message: response.data.message,\r\n                };\r\n            } else {\r\n                return {\r\n                    ok: false,\r\n                    message: response.data?.error,\r\n                };\r\n            }\r\n        } catch (error) {\r\n            return {\r\n                ok: false,\r\n                message: \"Có lỗi xảy ra\",\r\n            };\r\n        }\r\n    };\r\n};\r\n","import { PostService } from \"../../services/postService\";\r\nimport { UserService } from \"../../services/userService\";\r\nimport { actShowLoading, actHideLoading } from \"../app/actions\";\r\nimport { actSetUserDetailData } from \"../user/actions\";\r\nconst nameSpace = \"post:\";\r\nexport const ACT_FETCH_LIST_POST = `${nameSpace}ACT_FETCH_LIST_POST`;\r\nexport const ACT_FETCH_POST_DETAIL = `${nameSpace}ACT_FETCH_POST_DETAIL`;\r\nexport const ACT_GET_INFO_POST_EDIT = `${nameSpace}ACT_GET_INFO_POST_EDIT`;\r\nexport const ACT_DELETE_POST = `${nameSpace}ACT_DELETE_POST`;\r\nexport const ACT_ACTIVE_DEACTIVE_POST = `${nameSpace}ACT_ACTIVE_DEACTIVE_POST`;\r\nexport const ACT_SET_POSTS_RECENTS = `${nameSpace}ACT_SET_POSTS_RECENTS`;\r\n/**ACTION Creator */\r\n\r\n\r\nexport const actSetPostRecent = (posts) => {\r\n    return {\r\n        type: ACT_SET_POSTS_RECENTS,\r\n        payload: {\r\n            posts,\r\n        },\r\n    };\r\n};\r\nexport const actFetchListPost = ({ posts, currPage, pagesize }) => {\r\n    return {\r\n        type: ACT_FETCH_LIST_POST,\r\n        payload: {\r\n            posts,\r\n            currPage,\r\n            pagesize,\r\n        },\r\n    };\r\n};\r\n\r\nexport const actFetchPostDetail = ({ post, user, categories }) => {\r\n    return {\r\n        type: ACT_FETCH_POST_DETAIL,\r\n        payload: {\r\n            post,\r\n            user,\r\n            categories,\r\n        },\r\n    };\r\n};\r\n\r\nexport const actDeletePost = ({ postid }) => {\r\n    return {\r\n        type: ACT_DELETE_POST,\r\n        payload: { postid },\r\n    };\r\n};\r\n\r\nexport const actActiveDeactivePost = ({ posts }) => {\r\n    return {\r\n        type: ACT_ACTIVE_DEACTIVE_POST,\r\n        payload: { posts },\r\n    };\r\n};\r\n\r\n/**Action ASYNC */\r\n\r\nexport const actFetchListPostAsync = ({ currPage = 1, pagesize = 5 } = {}) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            // dispatch(actShowLoading());\r\n            const response = await PostService.getList({ currPage, pagesize });\r\n            // dispatch(actHideLoading());\r\n            if (response.status === 200) {\r\n                const posts = response.data.posts;\r\n                const message = response.data.message;\r\n                dispatch(actFetchListPost({ posts, currPage, pagesize }));\r\n                return {\r\n                    ok: true,\r\n                    message,\r\n                };\r\n            } else {\r\n                return {\r\n                    ok: false,\r\n                    message: \"Error list posts\",\r\n                };\r\n            }\r\n        } catch (error) {\r\n            dispatch(actHideLoading());\r\n        }\r\n    };\r\n};\r\n\r\nexport const actFetchPostDetailAsync = ({ postid }) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(actShowLoading());\r\n            const resPost = await PostService.getPostDetail({ postid });\r\n            dispatch(actHideLoading());\r\n\r\n            if (resPost.data.status === 200) {\r\n                const message = resPost.data.message;\r\n                const { post, categories } = resPost.data.data;\r\n                dispatch(actShowLoading());\r\n                const resUser = await UserService.getUserByID({\r\n                    userid: post.USERID,\r\n                });\r\n                dispatch(actHideLoading());\r\n                if (resUser.data.status === 200) {\r\n                    const user = resUser.data.user;\r\n                    dispatch(actFetchPostDetail({ post, categories, user }));\r\n                    return {\r\n                        ok: true,\r\n                        message,\r\n                    };\r\n                } else {\r\n                    return {\r\n                        ok: false,\r\n                        message: \"Có lỗi xảy ra\",\r\n                    };\r\n                }\r\n            } else {\r\n                return {\r\n                    ok: false,\r\n                    message: resPost.data.error,\r\n                };\r\n            }\r\n        } catch (error) {\r\n            dispatch(actHideLoading());\r\n            return {\r\n                ok: false,\r\n                message:\r\n                    error?.response?.data?.error || \"Không tìm thấy bài viết\",\r\n            };\r\n        }\r\n    };\r\n};\r\n\r\nexport const actFetchListSearchAsync = ({ query } = {}) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await PostService.searchListNews({ query });\r\n            if (response?.data?.status === 200) {\r\n                const { posts } = response.data;\r\n                return {\r\n                    ok: true,\r\n                    message: `Có ${posts.length || 0} bài viết cho \"${query}\"`,\r\n                    posts,\r\n                };\r\n            } else {\r\n                return {\r\n                    ok: false,\r\n                    message: \"Có lỗi xảy ra !\",\r\n                };\r\n            }\r\n        } catch (error) {\r\n            return {\r\n                ok: false,\r\n                message: \"Có lỗi xảy ra\",\r\n            };\r\n        }\r\n    };\r\n};\r\n\r\nexport const actCreateNewPostAsync = ({\r\n    category,\r\n    post_content,\r\n    obj_image,\r\n    ...resData\r\n}) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            dispatch(actShowLoading());\r\n\r\n            const formData = new FormData();\r\n\r\n            formData.append(\"category\", category);\r\n            formData.append(\"post_content\", post_content);\r\n\r\n            if (obj_image) {\r\n                formData.append(\"obj_image\", obj_image);\r\n            }\r\n\r\n            const response = await PostService.createNewPost(formData);\r\n            await dispatch(actFetchListPostAsync());\r\n            dispatch(actHideLoading());\r\n\r\n            if (response?.data?.status === 200) {\r\n                const { message, data } = response.data;\r\n                const { post, categories } = data;\r\n\r\n                const res = await PostService.getListPostUserID({\r\n                    userid: post?.USERID,\r\n                });\r\n\r\n                dispatch(\r\n                    actSetUserDetailData({\r\n                        userInfo: getState().User.userInfo[post?.USERID],\r\n                        userPosts:\r\n                            res?.data?.status === 200 ? res.data.posts : null,\r\n                    })\r\n                );\r\n\r\n                return {\r\n                    ok: true,\r\n                    message,\r\n                    post,\r\n                    categories,\r\n                };\r\n            } else {\r\n                return {\r\n                    ok: false,\r\n                    message: \"Có lỗi xảy ra !\",\r\n                };\r\n            }\r\n        } catch (error) {\r\n            return {\r\n                ok: false,\r\n                message: \"Có lỗi xảy ra !\",\r\n            };\r\n        }\r\n    };\r\n};\r\n\r\nexport const actEditPostAsync = ({\r\n    postid,\r\n    category,\r\n    post_content,\r\n    obj_image,\r\n    url_image,\r\n}) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            dispatch(actShowLoading());\r\n\r\n            const formData = new FormData();\r\n\r\n            formData.append(\"postid\", postid);\r\n            formData.append(\"category\", category);\r\n            formData.append(\"post_content\", post_content);\r\n            formData.append(\"url_image\", url_image);\r\n\r\n            if (obj_image) {\r\n                formData.append(\"obj_image\", obj_image);\r\n            }\r\n\r\n            const response = await PostService.editPost(formData);\r\n            await dispatch(actFetchListPostAsync());\r\n\r\n            dispatch(actHideLoading());\r\n\r\n            if (response?.data?.status === 200) {\r\n                const { message, data } = response.data;\r\n                const { post, categories } = data;\r\n\r\n                const res = await PostService.getListPostUserID({\r\n                    userid: post?.USERID,\r\n                });\r\n\r\n                dispatch(\r\n                    actSetUserDetailData({\r\n                        userInfo: getState().User.userInfo[post?.USERID],\r\n                        userPosts:\r\n                            res?.data?.status === 200 ? res.data.posts : null,\r\n                    })\r\n                );\r\n\r\n                return {\r\n                    ok: true,\r\n                    message,\r\n                    post,\r\n                    categories,\r\n                };\r\n            } else {\r\n                return {\r\n                    ok: false,\r\n                    message: \"Có lỗi xảy ra !\",\r\n                };\r\n            }\r\n        } catch (error) {\r\n            dispatch(actHideLoading());\r\n            return {\r\n                ok: false,\r\n                message: \"Có lỗi xảy ra catch ee!\",\r\n            };\r\n        }\r\n    };\r\n};\r\n\r\nexport const actDeletePostAsync = ({ postid }) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(actShowLoading());\r\n            const response = await PostService.deletePost({ postid });\r\n            await dispatch(actFetchListPostAsync());\r\n            dispatch(actHideLoading());\r\n\r\n            if (response?.data?.status === 200) {\r\n                await Promise.all([dispatch(actFetchListPostAsync())]);\r\n                const { message } = response;\r\n                dispatch(actDeletePost({ postid }));\r\n                return {\r\n                    ok: true,\r\n                    message,\r\n                };\r\n            } else {\r\n                return {\r\n                    ok: false,\r\n                    message: \"Có lỗi xảy ra !\",\r\n                };\r\n            }\r\n        } catch (error) {\r\n            dispatch(actHideLoading());\r\n            return {\r\n                ok: false,\r\n                message: \"Có lỗi xảy ra catch!\",\r\n            };\r\n        }\r\n    };\r\n};\r\n\r\nexport const actActiveDeactivePostAsync = ({ postid, userid }) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(actShowLoading());\r\n            const response = await PostService.activeDeactivePost({ postid });\r\n\r\n            const [resPostUserID, resPostList] = await Promise.all([\r\n                PostService.getListPostUserID({\r\n                    userid,\r\n                }),\r\n                dispatch(actFetchListPostAsync()),\r\n            ]);\r\n\r\n            dispatch(actHideLoading());\r\n\r\n            if (\r\n                response?.data?.status === 200 &&\r\n                resPostUserID?.data?.status === 200 &&\r\n                resPostList.ok\r\n            ) {\r\n                const { message } = response.data;\r\n                const { posts } = resPostUserID.data;\r\n\r\n                dispatch(actActiveDeactivePost({ posts }));\r\n\r\n                return {\r\n                    ok: true,\r\n                    message,\r\n                };\r\n            } else {\r\n                return {\r\n                    ok: false,\r\n                    message: response.data.error,\r\n                };\r\n            }\r\n        } catch (error) {\r\n            dispatch(actHideLoading());\r\n            return {\r\n                ok: false,\r\n                message: \"Có lỗi xảy ra catch!\",\r\n            };\r\n        }\r\n    };\r\n};\r\n\r\nexport const actFetchPostRecentAsync = () => {\r\n    return async (dispatch, getState) => {\r\n        const userid = getState().User.currentUser.USERID;\r\n        if (userid) {\r\n            dispatch(actShowLoading());\r\n            const response = await PostService.getListPostUserID({ userid });\r\n            dispatch(actHideLoading());\r\n            if (response.data.status === 200) {\r\n                const { posts } = response.data;\r\n                dispatch(actSetPostRecent(posts));\r\n            }\r\n        }\r\n    };\r\n};\r\n","import {\r\n    ACT_FETCH_LIST_POST,\r\n    ACT_FETCH_POST_DETAIL,\r\n    ACT_SET_POSTS_RECENTS,\r\n} from \"./actions\";\r\nconst initState = {\r\n    PostPaging: {\r\n        list: [],\r\n        currPage: 0,\r\n        pagesize: 1,\r\n    },\r\n    PostRecentCurrUser: [],\r\n    PostDetail: {},\r\n    PostEdit: {},\r\n};\r\n\r\nexport default function postReducer(statePost = initState, action) {\r\n    switch (action.type) {\r\n        case ACT_FETCH_LIST_POST:\r\n            let { posts, currPage, pagesize } = action.payload;\r\n            return {\r\n                ...statePost,\r\n                PostPaging: {\r\n                    list:\r\n                        currPage === 1\r\n                            ? posts\r\n                            : [...statePost.PostPaging.list, ...posts],\r\n                    currPage,\r\n                    pagesize,\r\n                },\r\n            };\r\n        case ACT_FETCH_POST_DETAIL:\r\n            let { post, user, categories } = action.payload;\r\n\r\n            return {\r\n                ...statePost,\r\n                PostDetail: {\r\n                    post,\r\n                    user,\r\n                    categories,\r\n                },\r\n            };\r\n        case ACT_SET_POSTS_RECENTS:\r\n            let postRecent = [];\r\n            const postLength = action.payload.posts.length;\r\n\r\n            if (postLength > 5) {\r\n                postRecent = action.payload.posts.slice(0, 4);\r\n            } else {\r\n                postRecent = action.payload.posts;\r\n            }\r\n\r\n            return {\r\n                ...statePost,\r\n                PostRecentCurrUser: postRecent,\r\n            };\r\n\r\n        default:\r\n            return statePost;\r\n    }\r\n}\r\n","import { api } from \"./api\";\r\n\r\nexport const CategoryService = {\r\n    getListPost({ currPage = 1, pagesize = 3, tagIndex, ...restParams } = {}) {\r\n        return api.call().get(\"/post/getListByCategory.php\", {\r\n            params: {\r\n                currPage,\r\n                pagesize,\r\n                tagIndex,\r\n                ...restParams,\r\n            },\r\n        });\r\n    },\r\n\r\n    getList() {\r\n        return api.call().get(\"/categories/index.php\");\r\n    },\r\n};\r\n","import { CategoryService } from \"../../services/categoryService\";\r\n\r\nconst nameSpace = \"category:\";\r\n\r\nexport const ACT_FETCH_LIST_POST_CATEGORY = `${nameSpace}ACT_FETCH_LIST_POST_CATEGORY`;\r\nexport const ACT_FETCH_CATEGORIES = `${nameSpace}ACT_FETCH_CATEGORIES`;\r\n\r\nexport const actFetchListPostCategory = ({ posts, currPage, pagesize }) => {\r\n    return {\r\n        type: ACT_FETCH_LIST_POST_CATEGORY,\r\n        payload: {\r\n            posts,\r\n            currPage,\r\n            pagesize,\r\n        },\r\n    };\r\n};\r\n\r\nexport const actFetchCategories = ({ categories }) => {\r\n    return {\r\n        type: ACT_FETCH_CATEGORIES,\r\n        payload: {\r\n            categories,\r\n        },\r\n    };\r\n};\r\n/** Action Async */\r\nexport const actFetchCategoriesAsync = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await CategoryService.getList();\r\n            if (response?.data?.status === 200) {\r\n                const categories = response.data.categories;\r\n                const message = response.data.message;\r\n                dispatch(actFetchCategories({ categories }));\r\n                return {\r\n                    ok: true,\r\n                    message,\r\n                };\r\n            } else {\r\n                return {\r\n                    ok: false,\r\n                    message: \"Error Categories\",\r\n                };\r\n            }\r\n        } catch (error) {}\r\n    };\r\n};\r\n\r\nexport const actFetchListPostCategoryAsync = ({\r\n    currPage = 1,\r\n    pagesize = 3,\r\n    tagIndex = 1,\r\n} = {}) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await CategoryService.getListPost({\r\n                currPage,\r\n                pagesize,\r\n                tagIndex,\r\n            });\r\n\r\n            if (response.data.status === 200) {\r\n                const posts = response.data.posts;\r\n\r\n                dispatch(\r\n                    actFetchListPostCategory({ posts, currPage, pagesize })\r\n                );\r\n            }\r\n        } catch (error) {}\r\n    };\r\n};\r\n","import { ACT_FETCH_LIST_POST_CATEGORY, ACT_FETCH_CATEGORIES } from \"./actions\";\r\nconst initState = {\r\n    PostPaging: {\r\n        list: [],\r\n        currPage: 0,\r\n        pagesize: 1,\r\n    },\r\n    listCategories: [],\r\n};\r\n\r\nexport default function categoryReducer(stateCategory = initState, action) {\r\n    switch (action.type) {\r\n        case ACT_FETCH_LIST_POST_CATEGORY:\r\n            const { posts, currPage, pagesize } = action.payload;\r\n            return {\r\n                ...stateCategory,\r\n                PostPaging: {\r\n                    list:\r\n                        currPage === 1\r\n                            ? posts\r\n                            : [...stateCategory.PostPaging.list, ...posts],\r\n                    currPage,\r\n                    pagesize,\r\n                },\r\n            };\r\n        case ACT_FETCH_CATEGORIES:\r\n            const { categories } = action.payload;\r\n            return {\r\n                ...stateCategory,\r\n                listCategories: categories,\r\n            };\r\n        default:\r\n            return stateCategory;\r\n    }\r\n}\r\n","import { api } from \"./api\";\r\n\r\nexport const CommentService = {\r\n    getList({ postid, ...restParams }) {\r\n        return api.call().get(\"/comment/comments.php\", {\r\n            params: {\r\n                postid,\r\n                ...restParams,\r\n            },\r\n        });\r\n    },\r\n    createNewComment({ comment, postid }) {\r\n        const headers = {\r\n            accept: \"multipart/form-data\",\r\n        };\r\n        return api.callWithAuth({ headers }).post(\"/comment/add_new.php\", {\r\n            comment,\r\n            postid,\r\n        });\r\n    },\r\n};\r\n","import { CommentService } from \"../../services/commentService\";\r\n\r\nconst nameSpace = \"comment:\";\r\n\r\nexport const ACT_FETCH_COMMENTS = `${nameSpace}ACT_FETCH_COMMENTS`;\r\nexport const ACT_ON_SELECT_SORT_COMMENT = `${nameSpace}ACT_ON_SELECT_SORT_COMMENT`;\r\nexport const actFetchComments = ({ comments }) => {\r\n    return {\r\n        type: ACT_FETCH_COMMENTS,\r\n        payload: {\r\n            comments,\r\n        },\r\n    };\r\n};\r\n\r\nexport const actOnSelectSortCommnet = ({ orderBy, orderDir }) => {\r\n    return {\r\n        type: ACT_ON_SELECT_SORT_COMMENT,\r\n        payload: {\r\n            orderBy,\r\n            orderDir,\r\n        },\r\n    };\r\n};\r\n// Action Async\r\nexport const actFetchCommentAsync = ({\r\n    postid,\r\n    currPage = 1,\r\n    pagesze = 3,\r\n    ...restParams\r\n}) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await CommentService.getList({\r\n                postid,\r\n                ...restParams,\r\n            });\r\n            if (response.data.status === 200) {\r\n                const { comments, message } = response.data;\r\n                dispatch(actFetchComments({ comments }));\r\n                return {\r\n                    ok: true,\r\n                    message,\r\n                };\r\n            } else {\r\n                return {\r\n                    ok: false,\r\n                    message: \"Error comments\",\r\n                };\r\n            }\r\n        } catch (error) {}\r\n    };\r\n};\r\n\r\nexport const actCreateNewCommentAsync = ({ comment, postid }) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const response = await CommentService.createNewComment({\r\n                comment,\r\n                postid,\r\n            });\r\n            if (response?.data?.status === 200) {\r\n                const { message } = response.data;\r\n                dispatch(actFetchCommentAsync({ postid }));\r\n                return {\r\n                    ok: true,\r\n                    message,\r\n                };\r\n            } else {\r\n                return {\r\n                    ok: false,\r\n                    message: \"Bình luận thất bại\",\r\n                };\r\n            }\r\n        } catch (error) {\r\n            return {\r\n                ok: false,\r\n                message: \"Bình luận thất bại trong catch\",\r\n            };\r\n        }\r\n    };\r\n};\r\n","import { ACT_FETCH_COMMENTS, ACT_ON_SELECT_SORT_COMMENT } from \"./actions\";\r\n\r\nconst initState = {\r\n    PostComments: {\r\n        list: [],\r\n        //  Sort\r\n        orderBy: \"latest\", // or name\r\n        orderDir: \"asc\",\r\n    },\r\n};\r\n\r\nexport default function commentReducer(stateComment = initState, action) {\r\n    switch (action.type) {\r\n        case ACT_FETCH_COMMENTS:\r\n            return {\r\n                ...stateComment,\r\n                PostComments: {\r\n                    ...stateComment.PostComments,\r\n                    list: action.payload.comments,\r\n                },\r\n            };\r\n        case ACT_ON_SELECT_SORT_COMMENT:\r\n            const { orderBy, orderDir } = action.payload;\r\n            return {\r\n                ...stateComment,\r\n                PostComments: {\r\n                    ...stateComment.PostComments,\r\n                    orderBy,\r\n                    orderDir,\r\n                },\r\n            };\r\n        default:\r\n            return stateComment;\r\n    }\r\n}\r\n","import { api } from \"./api\";\r\n\r\nexport const AuthService = {\r\n    Login({ email, password }) {\r\n        return api.call().post(\"/member/login.php\", {\r\n            email,\r\n            password,\r\n        });\r\n    },\r\n    register({ email, fullname, password, repassword }) {\r\n        return api.call().post(\"/member/register.php\", {\r\n            email,\r\n            fullname,\r\n            password,\r\n            repassword,\r\n        });\r\n    },\r\n    checkToken({ token }) {\r\n        return api.call().post(\"/member/checktoken.php\", {\r\n            token,\r\n        });\r\n    },\r\n    changePassword({ oldPassword, newPassword, reNewPassword }) {\r\n        return api.callWithAuth().post(\"/member/password.php\", {\r\n            oldPassword,\r\n            newPassword,\r\n            reNewPassword,\r\n        });\r\n    },\r\n};\r\n","import { AuthService } from \"../../services/authService\";\r\nimport { actFetchCurrentUser } from \"../user/actions\";\r\nimport Storage from \"../../utilities/Storage\";\r\nimport { actHideLoading, actShowLoading } from \"../app/actions\";\r\n//\r\nconst nameSpace = \"auth:\";\r\n\r\nexport const ACT_FETH_LOGIN = `${nameSpace}ACT_FETH_LOGIN`;\r\nexport const ACT_LOGOUT_SUCCESS = `${nameSpace}ACT_LOGOUT_SUCCESS`;\r\n\r\n//ACTION\r\nexport const actFetchLogin = ({ token }) => {\r\n    return {\r\n        type: ACT_FETH_LOGIN,\r\n        payload: {\r\n            token,\r\n        },\r\n    };\r\n};\r\n\r\nexport const actLogoutSuccess = () => {\r\n    Storage.removeToken();\r\n    return {\r\n        type: ACT_LOGOUT_SUCCESS,\r\n    };\r\n};\r\n\r\n// ACTION ASYNC\r\nexport const actFetchLoginAsync = ({ email, password }) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(actShowLoading());\r\n            const response = await AuthService.Login({ email, password });\r\n            dispatch(actHideLoading());\r\n            console.log(\"response login\", response);\r\n            if (response?.data?.status === 200) {\r\n                const { user, token, message } = response.data;\r\n                dispatch(actFetchLogin({ token }));\r\n                dispatch(actFetchCurrentUser({ user }));\r\n                Storage.setToken(token);\r\n\r\n                return {\r\n                    ok: true,\r\n                    message,\r\n                };\r\n            } else {\r\n                return {\r\n                    ok: false,\r\n                    message: response.data.error,\r\n                };\r\n            }\r\n        } catch (error) {\r\n            return {\r\n                message: \"Đăng nhập thất bại !\",\r\n            };\r\n        }\r\n    };\r\n};\r\n\r\nexport const actChangePasswordAsync = ({\r\n    oldPassword,\r\n    newPassword,\r\n    reNewPassword,\r\n}) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(actShowLoading());\r\n\r\n            const response = await AuthService.changePassword({\r\n                oldPassword,\r\n                newPassword,\r\n                reNewPassword,\r\n            });\r\n            console.log(\"response changepassword\", response);\r\n            dispatch(actHideLoading());\r\n\r\n            if (response?.data?.status === 200) {\r\n                const { message } = response.data;\r\n                dispatch(actLogoutSuccess());\r\n                return {\r\n                    ok: true,\r\n                    message,\r\n                };\r\n            } else {\r\n                return {\r\n                    ok: false,\r\n                    message: response.data.error,\r\n                };\r\n            }\r\n        } catch (error) {\r\n            return {\r\n                ok: false,\r\n                message: \"Có lỗi xảy ra. Xin nhập lại mật khẩu\",\r\n            };\r\n        }\r\n    };\r\n};\r\n\r\nexport const actRegisterAsync = ({ email, fullname, password, repassword }) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(actShowLoading());\r\n            const response = await AuthService.register({\r\n                email,\r\n                fullname,\r\n                password,\r\n                repassword,\r\n            });\r\n            dispatch(actHideLoading());\r\n            if (response?.data?.status === 200) {\r\n                const { message } = response.data;\r\n                return {\r\n                    ok: true,\r\n                    message,\r\n                };\r\n            } else {\r\n                return {\r\n                    ok: false,\r\n                    message: \"Đăng nhập thất bại!\",\r\n                };\r\n            }\r\n        } catch (error) {\r\n            return {\r\n                ok: false,\r\n                message: \"Có lỗi xảy ra\",\r\n            };\r\n        }\r\n    };\r\n};\r\n","import { ACT_FETH_LOGIN, ACT_LOGOUT_SUCCESS } from \"./actions\";\r\nimport Storage from \"../../utilities/Storage\";\r\nconst initState = {\r\n    token: Storage.getToken() || \"\",\r\n};\r\n\r\nexport default function authReducer(stateAuth = initState, action) {\r\n    switch (action.type) {\r\n        case ACT_FETH_LOGIN:\r\n            const { token } = action.payload;\r\n            return {\r\n                ...stateAuth,\r\n                token,\r\n            };\r\n        case ACT_LOGOUT_SUCCESS:\r\n            return {\r\n                ...stateAuth,\r\n                token: \"\",\r\n            };\r\n        default:\r\n            return stateAuth;\r\n    }\r\n}\r\n","import {\r\n    ACT_FETCH_CURRENT_USER,\r\n    ACT_SET_USER_DETAIL,\r\n    ACT_FETCH_LIST_MEMBER,\r\n    ACT_ACTIVE_DEACTIVE_MEMBER,\r\n    ACT_CHANGE_SEARCH_TEXT,\r\n    ACT_ON_SELECT_SORT,\r\n} from \"./actions\";\r\nimport { ACT_LOGOUT_SUCCESS } from \"../auth/actions\";\r\nimport { ACT_DELETE_POST, ACT_ACTIVE_DEACTIVE_POST } from \"../post/actions\";\r\nconst initState = {\r\n    currentUser: null,\r\n    userInfo: {},\r\n    userPosts: {},\r\n\r\n    members: {\r\n        list: [],\r\n        usersDeactive: [],\r\n        // pagination\r\n        pagesize: 0,\r\n        currPage: 1,\r\n        total: 0,\r\n        // Search Sort\r\n        orderBy: \"active\",\r\n        orderDir: \"asc\",\r\n        searchText: \"\",\r\n    },\r\n};\r\n\r\nexport default function userReducer(stateUser = initState, action) {\r\n    switch (action.type) {\r\n        case ACT_FETCH_CURRENT_USER:\r\n            return {\r\n                ...stateUser,\r\n                currentUser: action.payload.user,\r\n            };\r\n        case ACT_LOGOUT_SUCCESS:\r\n            return {\r\n                ...stateUser,\r\n                currentUser: null,\r\n            };\r\n        case ACT_SET_USER_DETAIL:\r\n            const { userInfo, userPosts } = action.payload;\r\n            return {\r\n                ...stateUser,\r\n                userInfo: {\r\n                    [userInfo?.USERID]: userInfo,\r\n                },\r\n                userPosts: {\r\n                    [userInfo?.USERID]: userPosts\r\n                        ? userPosts\r\n                        : stateUser.userPosts[userInfo?.USERID],\r\n                },\r\n            };\r\n        case ACT_DELETE_POST:\r\n            const postDeleteID = action.payload.postid;\r\n            if (stateUser.currentUser) {\r\n                const userID = stateUser.currentUser.USERID;\r\n                const newPost = stateUser.userPosts[userID]?.filter(\r\n                    (post) => post.PID !== postDeleteID\r\n                );\r\n                return {\r\n                    ...stateUser,\r\n                    userPosts: { [userID]: newPost },\r\n                };\r\n            } else {\r\n                return {\r\n                    ...stateUser,\r\n                };\r\n            }\r\n\r\n        case ACT_ACTIVE_DEACTIVE_POST:\r\n            if (stateUser.currentUser) {\r\n                const postActive = action.payload.posts;\r\n                return {\r\n                    ...stateUser,\r\n                    userPosts: {\r\n                        [stateUser.currentUser.USERID]: postActive,\r\n                    },\r\n                };\r\n            }\r\n            return {\r\n                ...stateUser,\r\n            };\r\n\r\n        case ACT_FETCH_LIST_MEMBER:\r\n            const { users, pagesize, currPage, total } = action.payload;\r\n            return {\r\n                ...stateUser,\r\n                members: {\r\n                    ...stateUser.members,\r\n                    list:\r\n                        currPage === 1\r\n                            ? users\r\n                            : [...stateUser.members.list, ...users],\r\n                    currPage,\r\n                    pagesize,\r\n                    total,\r\n                },\r\n            };\r\n        case ACT_ACTIVE_DEACTIVE_MEMBER:\r\n            const userIdActive = action.payload.userid;\r\n            const currentStatus = action.payload.currentStatus;\r\n\r\n            const newListMember = stateUser.members.list.map((member) => {\r\n                if (member.USERID === userIdActive) {\r\n                    member.status = currentStatus === \"1\" ? \"0\" : \"1\";\r\n                }\r\n                return member;\r\n            });\r\n            return {\r\n                ...stateUser,\r\n                members: {\r\n                    ...stateUser.members,\r\n                    list: newListMember,\r\n                },\r\n            };\r\n        case ACT_CHANGE_SEARCH_TEXT:\r\n            const { newText } = action.payload;\r\n            return {\r\n                ...stateUser,\r\n                members: {\r\n                    ...stateUser.members,\r\n                    searchText: newText,\r\n                },\r\n            };\r\n        case ACT_ON_SELECT_SORT:\r\n            const { orderBy, orderDir } = action.payload;\r\n            return {\r\n                ...stateUser,\r\n                members: {\r\n                    ...stateUser.members,\r\n                    orderBy,\r\n                    orderDir,\r\n                },\r\n            };\r\n\r\n        default:\r\n            return stateUser;\r\n    }\r\n}\r\n","import { SHOW_LOADING, HIDE_LOADING } from \"./actions\";\r\n\r\nconst initState = {\r\n    isLoading: false,\r\n};\r\n\r\nexport default function appReducer(stateApp = initState, action) {\r\n    switch (action.type) {\r\n        case SHOW_LOADING:\r\n            return {\r\n                ...stateApp,\r\n                isLoading: true,\r\n            };\r\n\r\n        case HIDE_LOADING:\r\n            return {\r\n                ...stateApp,\r\n                isLoading: false,\r\n            };\r\n\r\n        default:\r\n            return stateApp;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport postReducer from \"./post/reducer\";\r\nimport categoryReducer from \"./category/reducer\";\r\nimport commentReducer from \"./comment/reducer\";\r\nimport authReducer from \"./auth/reducer\";\r\nimport userReducer from \"./user/reducer\";\r\nimport appReducer from \"./app/reducer\";\r\nconst rootReducers = combineReducers({\r\n    Posts: postReducer,\r\n    Categories: categoryReducer,\r\n    Comments: commentReducer,\r\n    Auth: authReducer,\r\n    User: userReducer,\r\n    App: appReducer,\r\n});\r\n\r\nexport default rootReducers;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducers from \"./rootReducers\";\r\nimport logger from \"redux-logger\";\r\nimport thunkMiddle from \"redux-thunk\";\r\n\r\nlet thunkItems = [];\r\nif (process.env.NODE_ENV === \"development\") {\r\n    thunkItems.push(logger);\r\n}\r\nconst Store = createStore(\r\n    rootReducers,\r\n    applyMiddleware(thunkMiddle, ...thunkItems)\r\n);\r\n\r\nexport default Store;\r\n","const PATHS = {\r\n    HOMEPAGE: \"/\",\r\n    CHANGE_PASSWORD: \"/change-password\",\r\n    LOGIN: \"/login\",\r\n    SEARCH_RESULT: \"/search\",\r\n    POST_CREATE: \"/post/create\",\r\n    POST_EDIT: \"/post/edit/:post_id\",\r\n    POST_DELETE: \"/post/delete/:post_id\",\r\n    POST_DETAIL: \"/posts/:post_id\",\r\n    POST_LIST_CATEGORY: \"/posts/category/:category_id\",\r\n    REGISTER: \"/register\",\r\n    USER_DETAIL: \"/users/:user_id\",\r\n    USER_PROFILE: \"/user/profile\",\r\n    ADMIN_DASHBOARD: \"/admin/dashboard\",\r\n};\r\n\r\nexport default PATHS;\r\n","const ImgDefault = {\r\n    avatar: [\r\n        \"/images/avatar1.jpg\",\r\n        \"/images/avatar2.jpg\",\r\n        \"/images/avatar3.jpg\",\r\n        \"/images/avatar4.jpg\",\r\n    ],\r\n    post: [\r\n        \"/images/frog-1530803_960_720.jpg\",\r\n        \"/images/bill-1606319_1920.jpg\",\r\n        \"/images/milky-way-1063305_960_720.jpg\",\r\n        \"/images/plums-1649602_1920.jpg\",\r\n    ],\r\n};\r\nexport default ImgDefault;\r\n","import dayjs from \"dayjs\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\nimport \"dayjs/locale/vi\";\r\ndayjs.locale(\"vi\");\r\ndayjs.extend(relativeTime);\r\n\r\nexport default function useDateTime({ date_time }) {\r\n    const createdDate = dayjs(date_time);\r\n    const createdDateStr = createdDate.format(\"DD/MM/YYYY\");\r\n    const currentDate = dayjs();\r\n    const relativeTimeStr = createdDate.from(currentDate);\r\n    return {\r\n        createdDateStr,\r\n        relativeTimeStr,\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faShare,\r\n    faReply,\r\n    faFlag,\r\n    faThumbsDown,\r\n    faThumbsUp,\r\n    faGlobeAmericas,\r\n    faCommentAlt,\r\n    faCamera,\r\n    faUpload,\r\n    faEllipsisH,\r\n    faEdit,\r\n    faTrashAlt,\r\n    faLock,\r\n    faTasks,\r\n    faSortAmountUp,\r\n    faSortAmountDown,\r\n    faUnlock,\r\n    faUserCog,\r\n    faCog,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n//\r\nfunction useIcons() {\r\n    return {\r\n        Reply() {\r\n            return <FontAwesomeIcon icon={faReply} />;\r\n        },\r\n\r\n        ThumbsUp() {\r\n            return <FontAwesomeIcon icon={faThumbsUp} />;\r\n        },\r\n        ThumbsDown() {\r\n            return <FontAwesomeIcon icon={faThumbsDown} />;\r\n        },\r\n        Flag() {\r\n            return <FontAwesomeIcon icon={faFlag} />;\r\n        },\r\n        GlobeAmericas() {\r\n            return <FontAwesomeIcon icon={faGlobeAmericas} />;\r\n        },\r\n        Share() {\r\n            return <FontAwesomeIcon icon={faShare} />;\r\n        },\r\n        CommentAlt() {\r\n            return <FontAwesomeIcon icon={faCommentAlt} />;\r\n        },\r\n        Camera() {\r\n            return <FontAwesomeIcon icon={faCamera} />;\r\n        },\r\n        Upload() {\r\n            return <FontAwesomeIcon icon={faUpload} />;\r\n        },\r\n        EllipsisH() {\r\n            return <FontAwesomeIcon icon={faEllipsisH} />;\r\n        },\r\n        Edit() {\r\n            return <FontAwesomeIcon icon={faEdit} />;\r\n        },\r\n\r\n        TrashAlt() {\r\n            return <FontAwesomeIcon icon={faTrashAlt} />;\r\n        },\r\n        Lock() {\r\n            return <FontAwesomeIcon icon={faLock} />;\r\n        },\r\n        Tasks() {\r\n            return <FontAwesomeIcon icon={faTasks} />;\r\n        },\r\n        SortAmountUp() {\r\n            return <FontAwesomeIcon icon={faSortAmountUp} />;\r\n        },\r\n        SortAmountDown() {\r\n            return <FontAwesomeIcon icon={faSortAmountDown} />;\r\n        },\r\n        Unlock() {\r\n            return <FontAwesomeIcon icon={faUnlock} />;\r\n        },\r\n        UsersCog() {\r\n            return <FontAwesomeIcon icon={faUserCog} />;\r\n        },\r\n        SettingUser() {\r\n            return <FontAwesomeIcon icon={faCog} />;\r\n        },\r\n    };\r\n}\r\n\r\nexport default useIcons;\r\n","import { useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { PATHS } from \"../../constants\";\r\nimport { useSelector } from \"react-redux\";\r\n//\r\nexport default function useAuth() {\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const token = useSelector((state) => state.Auth.token);\r\n\r\n    useEffect(() => {\r\n        if (token === \"\" || !token) {\r\n            history.push(PATHS.LOGIN);\r\n        }\r\n    }, [location, history, token]);\r\n}\r\n","import { useMemo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport parseJwt from \"../parseJwt\";\r\n\r\nexport default function useUserID() {\r\n    const token = useSelector((state) => state.Auth.token);\r\n    const userid = useMemo(() => {\r\n        try {\r\n            const parseObj = parseJwt(token);\r\n            if (parseObj.id) {\r\n                return parseObj.id;\r\n            }\r\n            return null;\r\n        } catch (error) {\r\n            return null;\r\n        }\r\n    }, [token]);\r\n    return userid;\r\n}\r\n","import { useState, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function usePostPaging({\r\n    actFetchAsync = () => {},\r\n    restParams = {},\r\n    keyFieldReducer = \"Posts\",\r\n} = {}) {\r\n    const [loadMore, setLoadMore] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const PostPaging = useSelector(\r\n        (state) => state[keyFieldReducer].PostPaging\r\n    );\r\n    const posts = PostPaging.list;\r\n    const page = PostPaging.currPage;\r\n    const pagesize = PostPaging.pagesize;\r\n    const isLoadMore = page * pagesize > posts.length;\r\n\r\n    const handleLoadMore = useCallback(() => {\r\n        if (loadMore) return;\r\n        setLoadMore(true);\r\n        dispatch(actFetchAsync({ currPage: page + 1, ...restParams })).finally(\r\n            () => {\r\n                setLoadMore(false);\r\n            }\r\n        );\r\n    }, [actFetchAsync, loadMore, page, dispatch, restParams]);\r\n\r\n    return {\r\n        posts,\r\n        loadMore,\r\n        isLoadMore,\r\n        handleLoadMore,\r\n    };\r\n}\r\n","function useCheckImageUrl(url) {\r\n    if (url) {\r\n        return url.match(/\\.(jpeg|jpg|gif|png)$/) != null;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default useCheckImageUrl;\r\n","import React, { useMemo, useRef } from \"react\";\r\nimport \"./Post.scss\";\r\nimport { Link, useRouteMatch, useLocation, useHistory } from \"react-router-dom\";\r\nimport { PATHS } from \"../../constants\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport { IMAGE_DEFAULT } from \"../../constants\";\r\nimport { useDateTime, useIcons, useUserID } from \"../../utilities/hook\";\r\nimport queryString from \"query-string\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport { actActiveDeactivePostAsync } from \"../../store/post/actions\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n//\r\nexport default function PostItem({\r\n    post,\r\n    isPostDetail = false,\r\n    isPostRecent = false,\r\n    isSkeletonCard = false,\r\n    userInfo,\r\n    ...restProps\r\n}) {\r\n    const dateTime = useDateTime;\r\n    const Icons = useIcons();\r\n    const currentUserID = useUserID();\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const avatarElement = useRef(null);\r\n    const match = useRouteMatch(PATHS.SEARCH_RESULT);\r\n    const currentUser = useSelector((state) => state.User.currentUser);\r\n\r\n    const fullnamePost = post?.fullname || userInfo?.fullname;\r\n    const idxDefaultAvatar = post?.PID % IMAGE_DEFAULT.avatar.length;\r\n    const linkPostDetail = PATHS.POST_DETAIL.replace(\":post_id\", post?.PID);\r\n    const linkUserDetail = PATHS.USER_DETAIL.replace(\":user_id\", post?.USERID);\r\n    //\r\n\r\n    //\r\n\r\n    const query = useMemo(() => {\r\n        const parsed = queryString.parse(location.search);\r\n        if (parsed.q) {\r\n            return parsed.q.toLowerCase();\r\n        }\r\n    }, [location]);\r\n\r\n    //\r\n    const renderFullName = useMemo(() => {\r\n        if (match && query) {\r\n            return (\r\n                <Link\r\n                    to={linkUserDetail}\r\n                    className='ass1-section__name'\r\n                    dangerouslySetInnerHTML={{\r\n                        __html: fullnamePost\r\n                            .toLowerCase()\r\n                            .split(query)\r\n                            .join(`<mark>${query}</mark>`),\r\n                    }}\r\n                ></Link>\r\n            );\r\n        }\r\n        return (\r\n            <Link to={linkUserDetail} className='ass1-section__name'>\r\n                {fullnamePost}\r\n            </Link>\r\n        );\r\n    }, [fullnamePost, query, match, linkUserDetail]);\r\n\r\n    const renderContent = useMemo(() => {\r\n        if (match && query) {\r\n            return (\r\n                <p\r\n                    className='ass1-section__text'\r\n                    dangerouslySetInnerHTML={{\r\n                        __html: post?.post_content\r\n                            .toLowerCase()\r\n                            .split(query)\r\n                            .join(`<mark>${query}</mark>`),\r\n                    }}\r\n                />\r\n            );\r\n        }\r\n        return (\r\n            <p\r\n                className='ass1-section__text'\r\n                onClick={\r\n                    isPostRecent\r\n                        ? () => {\r\n                              history.push(linkPostDetail);\r\n                          }\r\n                        : null\r\n                }\r\n            >\r\n                {post?.post_content}\r\n            </p>\r\n        );\r\n    }, [post, query, match, history, isPostRecent, linkPostDetail]);\r\n\r\n    const handleActiveDeactive = () => {\r\n        const postid = post?.PID;\r\n        const userid = currentUserID;\r\n\r\n        if (postid && userid) {\r\n            dispatch(actActiveDeactivePostAsync({ postid, userid })).then(\r\n                (res) => {\r\n                    if (res.ok) {\r\n                        NotificationManager.success(res.message, null, 600);\r\n                    } else {\r\n                        NotificationManager.error(res.message, null, 600);\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    //\r\n\r\n    //\r\n    if (!post) return null;\r\n    const {\r\n        time_added: created,\r\n        USERID: userID,\r\n        profilepicture: userAvatar,\r\n        url_image: blogImg,\r\n        PID: postID,\r\n        status: activePost,\r\n        tag_value: categoryValue,\r\n    } = post;\r\n    // categories post-detail\r\n\r\n    const categories = restProps.categories;\r\n    //image default\r\n\r\n    const idxDefaultPost = postID % IMAGE_DEFAULT.post.length;\r\n    const avatar =\r\n        userAvatar ||\r\n        userInfo?.profilepicture ||\r\n        IMAGE_DEFAULT.avatar[idxDefaultAvatar];\r\n\r\n    const urlImg = blogImg || IMAGE_DEFAULT.post[idxDefaultPost];\r\n\r\n    const { relativeTimeStr } = dateTime({ date_time: created });\r\n\r\n    return (\r\n        <div className='ass1-section'>\r\n            {!isPostRecent ? (\r\n                <div\r\n                    className={`ass1-section__head ${match ? \"read-only\" : \"\"}`}\r\n                >\r\n                    <Link to={linkUserDetail} className='post_item_avatar'>\r\n                        <img\r\n                            ref={avatarElement}\r\n                            src={avatar}\r\n                            alt='avatar'\r\n                            className={`post__avatar-meme${postID}`}\r\n                        />\r\n                    </Link>\r\n                    <div className='post_item_info'>\r\n                        {renderFullName}\r\n                        <span className='ass1-section__passed'>\r\n                            <span>{relativeTimeStr}.</span>\r\n                            {activePost === \"0\" ? (\r\n                                <Icons.Lock />\r\n                            ) : (\r\n                                <Icons.GlobeAmericas />\r\n                            )}\r\n                        </span>\r\n                    </div>\r\n                    <div className='post_item-more'>\r\n                        <span>\r\n                            <Icons.EllipsisH />\r\n                        </span>\r\n                        <ListGroup className='post_item-list'>\r\n                            <ListGroup.Item>\r\n                                <Link\r\n                                    to={PATHS.POST_EDIT.replace(\r\n                                        \":post_id\",\r\n                                        postID\r\n                                    )}\r\n                                >\r\n                                    <Icons.Edit />\r\n                                    Chỉnh sửa bài viết\r\n                                </Link>\r\n                            </ListGroup.Item>\r\n                            {/* Active Post */}\r\n                            {currentUser?.USERID === userID ? (\r\n                                <ListGroup.Item onClick={handleActiveDeactive}>\r\n                                    {activePost === \"1\" ? (\r\n                                        <>\r\n                                            <Icons.Lock />\r\n                                            Chỉ mình tôi\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <Icons.GlobeAmericas />\r\n                                            Cộng đồng\r\n                                        </>\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            ) : null}\r\n\r\n                            {/* ---- */}\r\n                            {currentUser?.USERID === userID ? (\r\n                                <ListGroup.Item>\r\n                                    <Link\r\n                                        to={PATHS.POST_DELETE.replace(\r\n                                            \":post_id\",\r\n                                            postID\r\n                                        )}\r\n                                    >\r\n                                        <Icons.TrashAlt />\r\n                                        Xóa bài viết\r\n                                    </Link>\r\n                                </ListGroup.Item>\r\n                            ) : null}\r\n                        </ListGroup>\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n\r\n            <div\r\n                className={`ass1-section__content${\r\n                    isPostRecent ? \"--post-recent\" : \"\"\r\n                }`}\r\n            >\r\n                {!isSkeletonCard ? renderContent : <Skeleton count={3} />}\r\n                {categoryValue && (\r\n                    <Badge variant='secondary'>#{categoryValue}</Badge>\r\n                )}\r\n\r\n                {categories &&\r\n                    categories.map((category) => {\r\n                        let { tag_index, tag_value } = category;\r\n                        let linkCategory = PATHS.POST_LIST_CATEGORY.replace(\r\n                            \":category_id\",\r\n                            tag_index\r\n                        );\r\n                        return (\r\n                            <Link\r\n                                to={linkCategory}\r\n                                key={tag_index}\r\n                                className='post__category'\r\n                            >\r\n                                <Badge variant='secondary'>#{tag_value}</Badge>\r\n                            </Link>\r\n                        );\r\n                    })}\r\n\r\n                <div className='ass1-section__image'>\r\n                    <Link to={linkPostDetail}>\r\n                        {!isSkeletonCard ? (\r\n                            <img src={urlImg} alt='' />\r\n                        ) : (\r\n                            <Skeleton width={\"110px\"} height={\"64px\"} />\r\n                        )}\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport \"./Post.scss\";\r\nimport PostItem from \"./Post.Item\";\r\nexport default function PostList({ posts, ...restProps }) {\r\n    const classString = `ass1-section__list ${restProps.classRow || \"\"}`;\r\n\r\n    return (\r\n        <div className={classString.trim()}>\r\n            {posts?.map((post, index) => {\r\n                return (\r\n                    <div\r\n                        key={index}\r\n                        className={`ass1-section__item ${\r\n                            restProps.classCol || \"\"\r\n                        }`}\r\n                    >\r\n                        {post ? <PostItem post={post} /> : null}\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport { PATHS } from \"../../constants\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport PostItem from \"./Post.Item\";\r\nimport { actFetchPostRecentAsync } from \"../../store/post/actions\";\r\nexport default function PostRecent() {\r\n    const dispatch = useDispatch();\r\n    const currentUser = useSelector((state) => state.User.currentUser);\r\n    const postsRecent = useSelector((state) => state.Posts.PostRecentCurrUser);\r\n    const isLoading = useSelector((state) => state.App.isLoading);\r\n    const matchHomepage = useRouteMatch(PATHS.HOMEPAGE)?.isExact;\r\n    useEffect(() => {\r\n        if (!currentUser) return;\r\n        dispatch(actFetchPostRecentAsync());\r\n    }, [dispatch, currentUser]);\r\n\r\n    return (\r\n        <>\r\n            {!currentUser ? (\r\n                <aside className='ass1-aside'>\r\n                    <div className='ass1-content-head__t'>\r\n                        <div>Bài viết gần đây của bạn</div>\r\n                    </div>\r\n                    <div>\r\n                        <p>\r\n                            Vui lòng{\" \"}\r\n                            <b>\r\n                                <Link to={PATHS.LOGIN}>đăng nhập</Link>\r\n                            </b>{\" \"}\r\n                            để xem nội dung này !\r\n                        </p>\r\n                    </div>\r\n                </aside>\r\n            ) : (\r\n                <div\r\n                    className={`ass1-section__list ${\r\n                        matchHomepage ? \"stickySidebar\" : \"\"\r\n                    }`}\r\n                >\r\n                    <Card className='post__info-author'>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                Bài viết gần đây của {currentUser?.fullname}\r\n                            </Card.Text>\r\n                            <hr />\r\n                            {postsRecent.map((post, index) => {\r\n                                return (\r\n                                    <PostItem\r\n                                        key={index}\r\n                                        post={post}\r\n                                        isPostRecent={true}\r\n                                        isSkeletonCard={isLoading}\r\n                                    />\r\n                                );\r\n                            })}\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n","import LoadingPage from \"./Loading\";\r\nexport default LoadingPage;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./loading.scss\";\r\nexport default function Loading({ isLoading = false }) {\r\n    useEffect(() => {\r\n        let loadingEle = document.querySelector(\".loading_page\");\r\n        loadingEle.classList.toggle(\"show\", isLoading);\r\n    }, [isLoading]);\r\n    return (\r\n        <div className='loading_page'>\r\n            <svg\r\n                xmlns='http://www.w3.org/2000/svg'\r\n                xmlnsXlink='http://www.w3.org/1999/xlink'\r\n                style={{ margin: \"auto\", display: \"block\" }}\r\n                width='224px'\r\n                height='224px'\r\n                viewBox='0 0 100 100'\r\n                preserveAspectRatio='xMidYMid'\r\n            >\r\n                <circle\r\n                    cx={50}\r\n                    cy={50}\r\n                    r={0}\r\n                    fill='none'\r\n                    stroke='#1bbcdb'\r\n                    strokeWidth={4}\r\n                >\r\n                    <animate\r\n                        attributeName='r'\r\n                        repeatCount='indefinite'\r\n                        dur='1.0989010989010988s'\r\n                        values='0;40'\r\n                        keyTimes='0;1'\r\n                        keySplines='0 0.2 0.8 1'\r\n                        calcMode='spline'\r\n                        begin='-0.5494505494505494s'\r\n                    />\r\n                    <animate\r\n                        attributeName='opacity'\r\n                        repeatCount='indefinite'\r\n                        dur='1.0989010989010988s'\r\n                        values='1;0'\r\n                        keyTimes='0;1'\r\n                        keySplines='0.2 0 0.8 1'\r\n                        calcMode='spline'\r\n                        begin='-0.5494505494505494s'\r\n                    />\r\n                </circle>\r\n\r\n                <circle\r\n                    cx={50}\r\n                    cy={50}\r\n                    r={0}\r\n                    fill='none'\r\n                    stroke='#3be2f5'\r\n                    strokeWidth={4}\r\n                >\r\n                    <animate\r\n                        attributeName='r'\r\n                        repeatCount='indefinite'\r\n                        dur='1.0989010989010988s'\r\n                        values='0;40'\r\n                        keyTimes='0;1'\r\n                        keySplines='0 0.2 0.8 1'\r\n                        calcMode='spline'\r\n                    />\r\n                    <animate\r\n                        attributeName='opacity'\r\n                        repeatCount='indefinite'\r\n                        dur='1.0989010989010988s'\r\n                        values='1;0'\r\n                        keyTimes='0;1'\r\n                        keySplines='0.2 0 0.8 1'\r\n                        calcMode='spline'\r\n                    />\r\n                </circle>\r\n            </svg>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport \"./ontotop.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleDoubleUp } from \"@fortawesome/free-solid-svg-icons\";\r\nexport default function OnToTop() {\r\n    const handleOnToTop = useCallback(() => {\r\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    }, []);\r\n    return (\r\n        <div className='OnToTop' onClick={handleOnToTop}>\r\n            <FontAwesomeIcon icon={faAngleDoubleUp} />\r\n        </div>\r\n    );\r\n}\r\n","import HomePage from \"./HomePage\";\r\nexport default HomePage;\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\n// react-bootstrap\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n// component app\r\nimport PostList from \"../../components/Post/Post.List\";\r\nimport PostRecent from \"../../components/Post/Post.Recent\";\r\nimport LoadingPage from \"../../components/Loading\";\r\nimport OnToTop from \"../../components/OnToTop\";\r\n//\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actFetchListPostAsync } from \"../../store/post/actions\";\r\nimport { actFetchListMemberAsync } from \"../../store/user/actions\";\r\nimport { usePostPaging } from \"../../utilities/hook\";\r\n//\r\n\r\nexport default function HomePage() {\r\n    const dispatch = useDispatch();\r\n    const [loadingFirst, setLoadingFirst] = useState(false);\r\n    const members = useSelector((state) => state.User.members.list);\r\n    const currentUser = useSelector((state) => state.User.currentUser); //permission\r\n    const { posts, loadMore, handleLoadMore, isLoadMore } = usePostPaging({\r\n        actFetchAsync: actFetchListPostAsync,\r\n        keyFieldReducer: \"Posts\",\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (currentUser?.permission === \"admin\") {\r\n            dispatch(actFetchListMemberAsync());\r\n        }\r\n    }, [currentUser, dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (posts.length > 0) return;\r\n        setLoadingFirst(true);\r\n        dispatch(actFetchListPostAsync()).finally(() => {\r\n            setLoadingFirst(false);\r\n        });\r\n    }, [dispatch, posts]);\r\n\r\n    const listPostActiveAdmin = useMemo(() => {\r\n        if (posts) {\r\n            let listFilterActive = posts;\r\n            const usersDeactive = members.filter((user) => user.status === \"0\");\r\n\r\n            for (let user of usersDeactive) {\r\n                listFilterActive = listFilterActive.filter((post) => {\r\n                    return post.USERID !== user.USERID;\r\n                });\r\n            }\r\n\r\n            return listFilterActive.filter((post) => post.status === \"1\");\r\n        }\r\n        return [];\r\n    }, [posts, members]);\r\n\r\n    const listPostActiveUser = useMemo(() => {\r\n        if (posts) {\r\n            return posts.filter((post) => post.status === \"1\");\r\n        }\r\n        return [];\r\n    }, [posts]);\r\n\r\n    return (\r\n        <main>\r\n            <Container>\r\n                <Row>\r\n                    <Col lg={8}>\r\n                        <PostList\r\n                            posts={\r\n                                currentUser?.permission === \"admin\"\r\n                                    ? listPostActiveAdmin\r\n                                    : listPostActiveUser\r\n                            }\r\n                        />\r\n                        {!isLoadMore || posts.length > 0 ? (\r\n                            <Button\r\n                                variant='outline-secondary'\r\n                                className='load-more'\r\n                                disabled={loadMore}\r\n                                onClick={!loadMore ? handleLoadMore : null}\r\n                            >\r\n                                {loadMore ? (\r\n                                    <>\r\n                                        <Spinner\r\n                                            as='span'\r\n                                            animation='border'\r\n                                            size='sm'\r\n                                            role='status'\r\n                                            aria-hidden='true'\r\n                                        />{\" \"}\r\n                                        Đang tải ...\r\n                                    </>\r\n                                ) : (\r\n                                    \"Xem thêm\"\r\n                                )}\r\n                            </Button>\r\n                        ) : null}\r\n                    </Col>\r\n                    <Col lg={4}>\r\n                        <PostRecent />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <OnToTop />\r\n            <LoadingPage isLoading={loadingFirst} />\r\n        </main>\r\n    );\r\n}\r\n","const FULLNAME_VALIDATOR = {\r\n    messRequired: \"Yêu cầu nhập trường này !\",\r\n};\r\n\r\nconst EMAIL_VALIDATOR = {\r\n    pattern:\r\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n    messRequired: \"Yêu cầu nhập trường này !\",\r\n    messInvalid: \"Email không hợp lệ !\",\r\n};\r\n\r\nconst PASSWORD_VALIDATOR = {\r\n    minLength: 6,\r\n    messRequired: \" Yêu cầu nhập trường này !\",\r\n    messMinLength: \"Mật khẩu ít nhất 6 ký tự !\",\r\n};\r\n\r\nexport { FULLNAME_VALIDATOR, EMAIL_VALIDATOR, PASSWORD_VALIDATOR };\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PATHS } from \"../../constants\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEye, faEyeSlash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n    PASSWORD_VALIDATOR,\r\n    EMAIL_VALIDATOR,\r\n} from \"../../constants/FormValidator\";\r\n\r\nexport default function LoginForm({ handleLogin }) {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n    } = useForm();\r\n\r\n    const handleShowPassword = useCallback(() => {\r\n        setShowPassword(!showPassword);\r\n    }, [showPassword]);\r\n\r\n    const onSubmit = useCallback(\r\n        (initForm) => {\r\n            const { email, password } = initForm;\r\n            handleLogin &&\r\n                typeof handleLogin === \"function\" &&\r\n                handleLogin({ email, password });\r\n        },\r\n        [handleLogin]\r\n    );\r\n    return (\r\n        <div className='ass1-login__content'>\r\n            <p>Đăng nhập</p>\r\n            <div className='ass1-login__form'>\r\n                <form>\r\n                    <div className='ass1-login__control'>\r\n                        <input\r\n                            type='text'\r\n                            className='form-control'\r\n                            placeholder='Email'\r\n                            {...register(\"email\", {\r\n                                required: true,\r\n                                pattern: EMAIL_VALIDATOR.pattern,\r\n                            })}\r\n                        />{\" \"}\r\n                        {errors?.email?.type === \"required\" && (\r\n                            <span className='message'>\r\n                                {EMAIL_VALIDATOR.messRequired}\r\n                            </span>\r\n                        )}\r\n                        {errors?.email?.type === \"pattern\" && (\r\n                            <span className='message'>\r\n                                {EMAIL_VALIDATOR.messInvalid}\r\n                            </span>\r\n                        )}\r\n                    </div>\r\n                    <div className='ass1-login__control'>\r\n                        <input\r\n                            type={showPassword ? \"text\" : \"password\"}\r\n                            className='form-control'\r\n                            placeholder='Mật khẩu'\r\n                            {...register(\"password\", {\r\n                                required: true,\r\n                            })}\r\n                        />\r\n                        {errors?.password?.type === \"required\" && (\r\n                            <span className='message'>\r\n                                {PASSWORD_VALIDATOR.messRequired}\r\n                            </span>\r\n                        )}\r\n\r\n                        <FontAwesomeIcon\r\n                            onClick={handleShowPassword}\r\n                            icon={showPassword ? faEyeSlash : faEye}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className='ass1-login__send'>\r\n                        <button\r\n                            type='submit'\r\n                            className='ass1-btn'\r\n                            onClick={handleSubmit(onSubmit)}\r\n                        >\r\n                            Đăng nhập\r\n                        </button>\r\n                        <Link to={PATHS.REGISTER}>Đăng ký một tài khoản</Link>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import Login from \"./Login\";\r\nexport default Login;\r\n","import React, { useCallback } from \"react\";\r\nimport \"../../components/Login/login.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { PATHS } from \"../../constants\";\r\nimport LoginForm from \"../../components/Login/Login.Form\";\r\nimport LoadingPage from \"../../components/Loading\";\r\nimport { actFetchLoginAsync } from \"../../store/auth/actions\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport { useNotAuth } from \"../../utilities/hook\";\r\n\r\n//\r\nexport default function Login() {\r\n    useNotAuth();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const isLoading = useSelector((state) => state.App.isLoading);\r\n\r\n    const handleLogin = useCallback(\r\n        ({ email, password }) => {\r\n            dispatch(actFetchLoginAsync({ email, password })).then((res) => {\r\n                if (res.ok) {\r\n                    NotificationManager.success(res.message, null, 1000);\r\n                    history.push(PATHS.HOMEPAGE);\r\n                } else {\r\n                    NotificationManager.error(res.message, null, 1000);\r\n                }\r\n            });\r\n        },\r\n        [dispatch, history]\r\n    );\r\n\r\n    const injectedPropsLoginFrom = {\r\n        handleLogin,\r\n    };\r\n    return (\r\n        <main>\r\n            <div className='ass1-login'>\r\n                <LoginForm {...injectedPropsLoginFrom} />\r\n            </div>\r\n            <LoadingPage isLoading={isLoading} />\r\n        </main>\r\n    );\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { PATHS } from \"../../constants\";\r\nimport { useSelector } from \"react-redux\";\r\n//\r\nexport default function useNotAuth() {\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const token = useSelector((state) => state.Auth.token);\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            history.push(PATHS.HOMEPAGE);\r\n        }\r\n    }, [location, history, token]);\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function UniSVG() {\r\n    return (\r\n        <svg\r\n            version='1.1'\r\n            xmlns='http://www.w3.org/2000/svg'\r\n            xmlnsXlink='http://www.w3.org/1999/xlink'\r\n            viewBox='0 0 800 600'\r\n        >\r\n            <g>\r\n                <defs>\r\n                    <clipPath id='GlassClip'>\r\n                        <path\r\n                            d='M380.857,346.164c-1.247,4.651-4.668,8.421-9.196,10.06c-9.332,3.377-26.2,7.817-42.301,3.5\r\n        s-28.485-16.599-34.877-24.192c-3.101-3.684-4.177-8.66-2.93-13.311l7.453-27.798c0.756-2.82,3.181-4.868,6.088-5.13\r\n        c6.755-0.61,20.546-0.608,41.785,5.087s33.181,12.591,38.725,16.498c2.387,1.682,3.461,4.668,2.705,7.488L380.857,346.164z'\r\n                        />\r\n                    </clipPath>\r\n                    <clipPath id='cordClip'>\r\n                        <rect width={800} height={600} />\r\n                    </clipPath>\r\n                </defs>\r\n                <g id='planet'>\r\n                    <circle\r\n                        fill='none'\r\n                        stroke='#0E0620'\r\n                        strokeWidth={3}\r\n                        strokeMiterlimit={10}\r\n                        cx='572.859'\r\n                        cy='108.803'\r\n                        r='90.788'\r\n                    />\r\n                    <circle\r\n                        id='craterBig'\r\n                        fill='none'\r\n                        stroke='#0E0620'\r\n                        strokeWidth={3}\r\n                        strokeMiterlimit={10}\r\n                        cx='548.891'\r\n                        cy='62.319'\r\n                        r='13.074'\r\n                    />\r\n                    <circle\r\n                        id='craterSmall'\r\n                        fill='none'\r\n                        stroke='#0E0620'\r\n                        strokeWidth={3}\r\n                        strokeMiterlimit={10}\r\n                        cx='591.743'\r\n                        cy='158.918'\r\n                        r='7.989'\r\n                    />\r\n                    <path\r\n                        id='ring'\r\n                        fill='none'\r\n                        stroke='#0E0620'\r\n                        strokeWidth={3}\r\n                        strokeLinecap='round'\r\n                        strokeMiterlimit={10}\r\n                        d='\r\n    M476.562,101.461c-30.404,2.164-49.691,4.221-49.691,8.007c0,6.853,63.166,12.408,141.085,12.408s141.085-5.555,141.085-12.408\r\n    c0-3.378-15.347-4.988-40.243-7.225'\r\n                    />\r\n                    <path\r\n                        id='ringShadow'\r\n                        opacity='0.5'\r\n                        fill='none'\r\n                        stroke='#0E0620'\r\n                        strokeWidth={3}\r\n                        strokeLinecap='round'\r\n                        strokeMiterlimit={10}\r\n                        d='\r\n    M483.985,127.43c23.462,1.531,52.515,2.436,83.972,2.436c36.069,0,68.978-1.19,93.922-3.149'\r\n                    />\r\n                </g>\r\n                <g id='stars'>\r\n                    <g id='starsBig'>\r\n                        <g>\r\n                            <line\r\n                                fill='none'\r\n                                stroke='#0E0620'\r\n                                strokeWidth={3}\r\n                                strokeLinecap='round'\r\n                                strokeMiterlimit={10}\r\n                                x1='518.07'\r\n                                y1='245.375'\r\n                                x2='518.07'\r\n                                y2='266.581'\r\n                            />\r\n                            <line\r\n                                fill='none'\r\n                                stroke='#0E0620'\r\n                                strokeWidth={3}\r\n                                strokeLinecap='round'\r\n                                strokeMiterlimit={10}\r\n                                x1='508.129'\r\n                                y1='255.978'\r\n                                x2='528.01'\r\n                                y2='255.978'\r\n                            />\r\n                        </g>\r\n                        <g>\r\n                            <line\r\n                                fill='none'\r\n                                stroke='#0E0620'\r\n                                strokeWidth={3}\r\n                                strokeLinecap='round'\r\n                                strokeMiterlimit={10}\r\n                                x1='154.55'\r\n                                y1='231.391'\r\n                                x2='154.55'\r\n                                y2='252.598'\r\n                            />\r\n                            <line\r\n                                fill='none'\r\n                                stroke='#0E0620'\r\n                                strokeWidth={3}\r\n                                strokeLinecap='round'\r\n                                strokeMiterlimit={10}\r\n                                x1='144.609'\r\n                                y1='241.995'\r\n                                x2='164.49'\r\n                                y2='241.995'\r\n                            />\r\n                        </g>\r\n                        <g>\r\n                            <line\r\n                                fill='none'\r\n                                stroke='#0E0620'\r\n                                strokeWidth={3}\r\n                                strokeLinecap='round'\r\n                                strokeMiterlimit={10}\r\n                                x1='320.135'\r\n                                y1='132.746'\r\n                                x2='320.135'\r\n                                y2='153.952'\r\n                            />\r\n                            <line\r\n                                fill='none'\r\n                                stroke='#0E0620'\r\n                                strokeWidth={3}\r\n                                strokeLinecap='round'\r\n                                strokeMiterlimit={10}\r\n                                x1='310.194'\r\n                                y1='143.349'\r\n                                x2='330.075'\r\n                                y2='143.349'\r\n                            />\r\n                        </g>\r\n                        <g>\r\n                            <line\r\n                                fill='none'\r\n                                stroke='#0E0620'\r\n                                strokeWidth={3}\r\n                                strokeLinecap='round'\r\n                                strokeMiterlimit={10}\r\n                                x1='200.67'\r\n                                y1='483.11'\r\n                                x2='200.67'\r\n                                y2='504.316'\r\n                            />\r\n                            <line\r\n                                fill='none'\r\n                                stroke='#0E0620'\r\n                                strokeWidth={3}\r\n                                strokeLinecap='round'\r\n                                strokeMiterlimit={10}\r\n                                x1='210.611'\r\n                                y1='493.713'\r\n                                x2='190.73'\r\n                                y2='493.713'\r\n                            />\r\n                        </g>\r\n                    </g>\r\n                    <g id='starsSmall'>\r\n                        <g>\r\n                            <line\r\n                                fill='none'\r\n                                stroke='#0E0620'\r\n                                strokeWidth={3}\r\n                                strokeLinecap='round'\r\n                                strokeMiterlimit={10}\r\n                                x1='432.173'\r\n                                y1='380.52'\r\n                                x2='432.173'\r\n                                y2='391.83'\r\n                            />\r\n                            <line\r\n                                fill='none'\r\n                                stroke='#0E0620'\r\n                                strokeWidth={3}\r\n                                strokeLinecap='round'\r\n                                strokeMiterlimit={10}\r\n                                x1='426.871'\r\n                                y1='386.175'\r\n                                x2='437.474'\r\n                                y2='386.175'\r\n                            />\r\n                        </g>\r\n                        <g>\r\n                            <line\r\n                                fill='none'\r\n                                stroke='#0E0620'\r\n                                strokeWidth={3}\r\n                                strokeLinecap='round'\r\n                                strokeMiterlimit={10}\r\n                                x1='489.555'\r\n                                y1='299.765'\r\n                                x2='489.555'\r\n                                y2='308.124'\r\n                            />\r\n                            <line\r\n                                fill='none'\r\n                                stroke='#0E0620'\r\n                                strokeWidth={3}\r\n                                strokeLinecap='round'\r\n                                strokeMiterlimit={10}\r\n                                x1='485.636'\r\n                                y1='303.945'\r\n                                x2='493.473'\r\n                                y2='303.945'\r\n                            />\r\n                        </g>\r\n                        <g>\r\n                            <line\r\n                                fill='none'\r\n                                stroke='#0E0620'\r\n                                strokeWidth={3}\r\n                                strokeLinecap='round'\r\n                                strokeMiterlimit={10}\r\n                                x1='231.468'\r\n                                y1='291.009'\r\n                                x2='231.468'\r\n                                y2='299.369'\r\n                            />\r\n                            <line\r\n                                fill='none'\r\n                                stroke='#0E0620'\r\n                                strokeWidth={3}\r\n                                strokeLinecap='round'\r\n                                strokeMiterlimit={10}\r\n                                x1='227.55'\r\n                                y1='295.189'\r\n                                x2='235.387'\r\n                                y2='295.189'\r\n                            />\r\n                        </g>\r\n                        <g>\r\n                            <line\r\n                                fill='none'\r\n                                stroke='#0E0620'\r\n                                strokeWidth={3}\r\n                                strokeLinecap='round'\r\n                                strokeMiterlimit={10}\r\n                                x1='244.032'\r\n                                y1='547.539'\r\n                                x2='244.032'\r\n                                y2='555.898'\r\n                            />\r\n                            <line\r\n                                fill='none'\r\n                                stroke='#0E0620'\r\n                                strokeWidth={3}\r\n                                strokeLinecap='round'\r\n                                strokeMiterlimit={10}\r\n                                x1='247.95'\r\n                                y1='551.719'\r\n                                x2='240.113'\r\n                                y2='551.719'\r\n                            />\r\n                        </g>\r\n                        <g>\r\n                            <line\r\n                                fill='none'\r\n                                stroke='#0E0620'\r\n                                strokeWidth={3}\r\n                                strokeLinecap='round'\r\n                                strokeMiterlimit={10}\r\n                                x1='186.359'\r\n                                y1='406.967'\r\n                                x2='186.359'\r\n                                y2='415.326'\r\n                            />\r\n                            <line\r\n                                fill='none'\r\n                                stroke='#0E0620'\r\n                                strokeWidth={3}\r\n                                strokeLinecap='round'\r\n                                strokeMiterlimit={10}\r\n                                x1='190.277'\r\n                                y1='411.146'\r\n                                x2='182.44'\r\n                                y2='411.146'\r\n                            />\r\n                        </g>\r\n                        <g>\r\n                            <line\r\n                                fill='none'\r\n                                stroke='#0E0620'\r\n                                strokeWidth={3}\r\n                                strokeLinecap='round'\r\n                                strokeMiterlimit={10}\r\n                                x1='480.296'\r\n                                y1='406.967'\r\n                                x2='480.296'\r\n                                y2='415.326'\r\n                            />\r\n                            <line\r\n                                fill='none'\r\n                                stroke='#0E0620'\r\n                                strokeWidth={3}\r\n                                strokeLinecap='round'\r\n                                strokeMiterlimit={10}\r\n                                x1='484.215'\r\n                                y1='411.146'\r\n                                x2='476.378'\r\n                                y2='411.146'\r\n                            />\r\n                        </g>\r\n                    </g>\r\n                    <g id='circlesBig'>\r\n                        <circle\r\n                            fill='none'\r\n                            stroke='#0E0620'\r\n                            strokeWidth={3}\r\n                            strokeLinecap='round'\r\n                            strokeMiterlimit={10}\r\n                            cx='588.977'\r\n                            cy='255.978'\r\n                            r='7.952'\r\n                        />\r\n                        <circle\r\n                            fill='none'\r\n                            stroke='#0E0620'\r\n                            strokeWidth={3}\r\n                            strokeLinecap='round'\r\n                            strokeMiterlimit={10}\r\n                            cx='450.066'\r\n                            cy='320.259'\r\n                            r='7.952'\r\n                        />\r\n                        <circle\r\n                            fill='none'\r\n                            stroke='#0E0620'\r\n                            strokeWidth={3}\r\n                            strokeLinecap='round'\r\n                            strokeMiterlimit={10}\r\n                            cx='168.303'\r\n                            cy='353.753'\r\n                            r='7.952'\r\n                        />\r\n                        <circle\r\n                            fill='none'\r\n                            stroke='#0E0620'\r\n                            strokeWidth={3}\r\n                            strokeLinecap='round'\r\n                            strokeMiterlimit={10}\r\n                            cx='429.522'\r\n                            cy='201.185'\r\n                            r='7.952'\r\n                        />\r\n                        <circle\r\n                            fill='none'\r\n                            stroke='#0E0620'\r\n                            strokeWidth={3}\r\n                            strokeLinecap='round'\r\n                            strokeMiterlimit={10}\r\n                            cx='200.67'\r\n                            cy='176.313'\r\n                            r='7.952'\r\n                        />\r\n                        <circle\r\n                            fill='none'\r\n                            stroke='#0E0620'\r\n                            strokeWidth={3}\r\n                            strokeLinecap='round'\r\n                            strokeMiterlimit={10}\r\n                            cx='133.343'\r\n                            cy='477.014'\r\n                            r='7.952'\r\n                        />\r\n                        <circle\r\n                            fill='none'\r\n                            stroke='#0E0620'\r\n                            strokeWidth={3}\r\n                            strokeLinecap='round'\r\n                            strokeMiterlimit={10}\r\n                            cx='283.521'\r\n                            cy='568.033'\r\n                            r='7.952'\r\n                        />\r\n                        <circle\r\n                            fill='none'\r\n                            stroke='#0E0620'\r\n                            strokeWidth={3}\r\n                            strokeLinecap='round'\r\n                            strokeMiterlimit={10}\r\n                            cx='413.618'\r\n                            cy='482.387'\r\n                            r='7.952'\r\n                        />\r\n                    </g>\r\n                    <g id='circlesSmall'>\r\n                        <circle\r\n                            fill='#0E0620'\r\n                            cx='549.879'\r\n                            cy='296.402'\r\n                            r='2.651'\r\n                        />\r\n                        <circle\r\n                            fill='#0E0620'\r\n                            cx='253.29'\r\n                            cy='229.24'\r\n                            r='2.651'\r\n                        />\r\n                        <circle\r\n                            fill='#0E0620'\r\n                            cx='434.824'\r\n                            cy='263.931'\r\n                            r='2.651'\r\n                        />\r\n                        <circle\r\n                            fill='#0E0620'\r\n                            cx='183.708'\r\n                            cy='544.176'\r\n                            r='2.651'\r\n                        />\r\n                        <circle\r\n                            fill='#0E0620'\r\n                            cx='382.515'\r\n                            cy='530.923'\r\n                            r='2.651'\r\n                        />\r\n                        <circle\r\n                            fill='#0E0620'\r\n                            cx='130.693'\r\n                            cy='305.608'\r\n                            r='2.651'\r\n                        />\r\n                        <circle\r\n                            fill='#0E0620'\r\n                            cx='480.296'\r\n                            cy='477.014'\r\n                            r='2.651'\r\n                        />\r\n                    </g>\r\n                </g>\r\n                <g id='spaceman' clipPath='url(cordClip)'>\r\n                    <path\r\n                        id='cord'\r\n                        fill='none'\r\n                        stroke='#0E0620'\r\n                        strokeWidth={3}\r\n                        strokeLinecap='round'\r\n                        strokeLinejoin='round'\r\n                        strokeMiterlimit={10}\r\n                        d='\r\n    M273.813,410.969c0,0-54.527,39.501-115.34,38.218c-2.28-0.048-4.926-0.241-7.841-0.548\r\n    c-68.038-7.178-134.288-43.963-167.33-103.87c-0.908-1.646-1.793-3.3-2.654-4.964c-18.395-35.511-37.259-83.385-32.075-118.817'\r\n                    />\r\n                    <path\r\n                        id='backpack'\r\n                        fill='#FFFFFF'\r\n                        stroke='#0E0620'\r\n                        strokeWidth={3}\r\n                        strokeLinecap='round'\r\n                        strokeLinejoin='round'\r\n                        strokeMiterlimit={10}\r\n                        d='\r\n    M338.164,454.689l-64.726-17.353c-11.086-2.972-17.664-14.369-14.692-25.455l15.694-58.537\r\n    c3.889-14.504,18.799-23.11,33.303-19.221l52.349,14.035c14.504,3.889,23.11,18.799,19.221,33.303l-15.694,58.537\r\n    C360.647,451.083,349.251,457.661,338.164,454.689z'\r\n                    />\r\n                    <g id='antenna'>\r\n                        <line\r\n                            fill='#FFFFFF'\r\n                            stroke='#0E0620'\r\n                            strokeWidth={3}\r\n                            strokeLinecap='round'\r\n                            strokeLinejoin='round'\r\n                            strokeMiterlimit={10}\r\n                            x1='323.396'\r\n                            y1='236.625'\r\n                            x2='295.285'\r\n                            y2='353.753'\r\n                        />\r\n                        <circle\r\n                            fill='#FFFFFF'\r\n                            stroke='#0E0620'\r\n                            strokeWidth={3}\r\n                            strokeLinecap='round'\r\n                            strokeLinejoin='round'\r\n                            strokeMiterlimit={10}\r\n                            cx='323.666'\r\n                            cy='235.617'\r\n                            r='6.375'\r\n                        />\r\n                    </g>\r\n                    <g id='armR'>\r\n                        <path\r\n                            fill='#FFFFFF'\r\n                            stroke='#0E0620'\r\n                            strokeWidth={3}\r\n                            strokeLinecap='round'\r\n                            strokeLinejoin='round'\r\n                            strokeMiterlimit={10}\r\n                            d='\r\n        M360.633,363.039c1.352,1.061,4.91,5.056,5.824,6.634l27.874,47.634c3.855,6.649,1.59,15.164-5.059,19.02l0,0\r\n        c-6.649,3.855-15.164,1.59-19.02-5.059l-5.603-9.663'\r\n                        />\r\n                        <path\r\n                            fill='#FFFFFF'\r\n                            stroke='#0E0620'\r\n                            strokeWidth={3}\r\n                            strokeLinecap='round'\r\n                            strokeLinejoin='round'\r\n                            strokeMiterlimit={10}\r\n                            d='\r\n        M388.762,434.677c5.234-3.039,7.731-8.966,6.678-14.594c2.344,1.343,4.383,3.289,5.837,5.793\r\n        c4.411,7.596,1.829,17.33-5.767,21.741c-7.596,4.411-17.33,1.829-21.741-5.767c-1.754-3.021-2.817-5.818-2.484-9.046\r\n        C375.625,437.355,383.087,437.973,388.762,434.677z'\r\n                        />\r\n                    </g>\r\n                    <g id='armL'>\r\n                        <path\r\n                            fill='#FFFFFF'\r\n                            stroke='#0E0620'\r\n                            strokeWidth={3}\r\n                            strokeLinecap='round'\r\n                            strokeLinejoin='round'\r\n                            strokeMiterlimit={10}\r\n                            d='\r\n        M301.301,347.66c-1.702,0.242-5.91,1.627-7.492,2.536l-47.965,27.301c-6.664,3.829-8.963,12.335-5.134,18.999h0\r\n        c3.829,6.664,12.335,8.963,18.999,5.134l9.685-5.564'\r\n                        />\r\n                        <path\r\n                            fill='#FFFFFF'\r\n                            stroke='#0E0620'\r\n                            strokeWidth={3}\r\n                            strokeLinecap='round'\r\n                            strokeLinejoin='round'\r\n                            strokeMiterlimit={10}\r\n                            d='\r\n        M241.978,395.324c-3.012-5.25-2.209-11.631,1.518-15.977c-2.701-0.009-5.44,0.656-7.952,2.096\r\n        c-7.619,4.371-10.253,14.09-5.883,21.71c4.371,7.619,14.09,10.253,21.709,5.883c3.03-1.738,5.35-3.628,6.676-6.59\r\n        C252.013,404.214,245.243,401.017,241.978,395.324z'\r\n                        />\r\n                    </g>\r\n                    <g id='body'>\r\n                        <path\r\n                            fill='#FFFFFF'\r\n                            stroke='#0E0620'\r\n                            strokeWidth={3}\r\n                            strokeLinecap='round'\r\n                            strokeLinejoin='round'\r\n                            strokeMiterlimit={10}\r\n                            d='\r\n        M353.351,365.387c-7.948,1.263-16.249,0.929-24.48-1.278c-8.232-2.207-15.586-6.07-21.836-11.14\r\n        c-17.004,4.207-31.269,17.289-36.128,35.411l-1.374,5.123c-7.112,26.525,8.617,53.791,35.13,60.899l0,0\r\n        c26.513,7.108,53.771-8.632,60.883-35.158l1.374-5.123C371.778,395.999,365.971,377.536,353.351,365.387z'\r\n                        />\r\n                        <path\r\n                            fill='none'\r\n                            stroke='#0E0620'\r\n                            strokeWidth={3}\r\n                            strokeLinecap='round'\r\n                            strokeLinejoin='round'\r\n                            strokeMiterlimit={10}\r\n                            d='\r\n        M269.678,394.912L269.678,394.912c26.3,20.643,59.654,29.585,93.106,25.724l2.419-0.114'\r\n                        />\r\n                    </g>\r\n                    <g id='legs'>\r\n                        <g id='legR'>\r\n                            <path\r\n                                fill='#FFFFFF'\r\n                                stroke='#0E0620'\r\n                                strokeWidth={3}\r\n                                strokeLinecap='round'\r\n                                strokeLinejoin='round'\r\n                                strokeMiterlimit={10}\r\n                                d='\r\n            M312.957,456.734l-14.315,53.395c-1.896,7.07,2.299,14.338,9.37,16.234l0,0c7.07,1.896,14.338-2.299,16.234-9.37l17.838-66.534\r\n            C333.451,455.886,323.526,457.387,312.957,456.734z'\r\n                            />\r\n                            <line\r\n                                fill='none'\r\n                                stroke='#0E0620'\r\n                                strokeWidth={3}\r\n                                strokeLinecap='round'\r\n                                strokeLinejoin='round'\r\n                                strokeMiterlimit={10}\r\n                                x1='304.883'\r\n                                y1='486.849'\r\n                                x2='330.487'\r\n                                y2='493.713'\r\n                            />\r\n                        </g>\r\n                        <g id='legL'>\r\n                            <path\r\n                                fill='#FFFFFF'\r\n                                stroke='#0E0620'\r\n                                strokeWidth={3}\r\n                                strokeLinecap='round'\r\n                                strokeLinejoin='round'\r\n                                strokeMiterlimit={10}\r\n                                d='\r\n            M296.315,452.273L282,505.667c-1.896,7.07-9.164,11.265-16.234,9.37l0,0c-7.07-1.896-11.265-9.164-9.37-16.234l17.838-66.534\r\n            C278.993,441.286,286.836,447.55,296.315,452.273z'\r\n                            />\r\n                            <line\r\n                                fill='none'\r\n                                stroke='#0E0620'\r\n                                strokeWidth={3}\r\n                                strokeLinecap='round'\r\n                                strokeLinejoin='round'\r\n                                strokeMiterlimit={10}\r\n                                x1='262.638'\r\n                                y1='475.522'\r\n                                x2='288.241'\r\n                                y2='482.387'\r\n                            />\r\n                        </g>\r\n                    </g>\r\n                    <g id='head'>\r\n                        <ellipse\r\n                            transform='matrix(0.259 -0.9659 0.9659 0.259 -51.5445 563.2371)'\r\n                            fill='#FFFFFF'\r\n                            stroke='#0E0620'\r\n                            strokeWidth={3}\r\n                            strokeLinecap='round'\r\n                            strokeLinejoin='round'\r\n                            strokeMiterlimit={10}\r\n                            cx='341.295'\r\n                            cy='315.211'\r\n                            rx='61.961'\r\n                            ry='60.305'\r\n                        />\r\n                        <path\r\n                            id='headStripe'\r\n                            fill='none'\r\n                            stroke='#0E0620'\r\n                            strokeWidth={3}\r\n                            strokeLinecap='round'\r\n                            strokeLinejoin='round'\r\n                            strokeMiterlimit={10}\r\n                            d='\r\n        M330.868,261.338c-7.929,1.72-15.381,5.246-21.799,10.246'\r\n                        />\r\n                        <path\r\n                            fill='#FFFFFF'\r\n                            stroke='#0E0620'\r\n                            strokeWidth={3}\r\n                            strokeLinecap='round'\r\n                            strokeLinejoin='round'\r\n                            strokeMiterlimit={10}\r\n                            d='\r\n        M380.857,346.164c-1.247,4.651-4.668,8.421-9.196,10.06c-9.332,3.377-26.2,7.817-42.301,3.5s-28.485-16.599-34.877-24.192\r\n        c-3.101-3.684-4.177-8.66-2.93-13.311l7.453-27.798c0.756-2.82,3.181-4.868,6.088-5.13c6.755-0.61,20.546-0.608,41.785,5.087\r\n        s33.181,12.591,38.725,16.498c2.387,1.682,3.461,4.668,2.705,7.488L380.857,346.164z'\r\n                        />\r\n                        <g clipPath='url(#GlassClip)'>\r\n                            <polygon\r\n                                id='glassShine'\r\n                                fill='none'\r\n                                stroke='#0E0620'\r\n                                strokeWidth={3}\r\n                                strokeMiterlimit={10}\r\n                                points='\r\n            278.436,375.599 383.003,264.076 364.393,251.618 264.807,364.928 \t\t\t\t'\r\n                            />\r\n                        </g>\r\n                    </g>\r\n                </g>\r\n            </g>\r\n        </svg>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport \"./pagenotfound.scss\";\r\nimport UniSVG from \"./UniSVG\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { PATHS } from \"../../constants\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//\r\nexport default function index() {\r\n    return (\r\n        <Row className='page-not-found_row'>\r\n            <Col md={6}>\r\n                <UniSVG />\r\n            </Col>\r\n            <Col md={6} className='go-home'>\r\n                <h1>Không tìm thấy kết quả !.!</h1>\r\n                <Link to={PATHS.HOMEPAGE}>HOME</Link>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n","import PostCategories from \"./PostCategories\";\r\nexport default PostCategories;\r\n","import React, { useEffect, useState } from \"react\";\r\n// react-bootstrap\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\n// component app\r\nimport LoadingPage from \"../../components/Loading\";\r\nimport PostList from \"../../components/Post/Post.List\";\r\nimport OnToTop from \"../../components/OnToTop\";\r\nimport PageNotFound from \"../../components/PageNotFound\";\r\n//\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { actFetchListPostCategoryAsync } from \"../../store/category/actions\";\r\nimport { usePostPaging } from \"../../utilities/hook\";\r\n//\r\nexport default function PostCategories() {\r\n    const { category_id } = useParams();\r\n    const [loadPage, setLoadPage] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const { loadMore, isLoadMore, posts, handleLoadMore } = usePostPaging({\r\n        actFetchAsync: actFetchListPostCategoryAsync,\r\n        keyFieldReducer: \"Categories\",\r\n        restParams: { tagIndex: category_id },\r\n    });\r\n    useEffect(() => {\r\n        setLoadPage(true);\r\n        dispatch(\r\n            actFetchListPostCategoryAsync({ tagIndex: category_id })\r\n        ).finally(() => {\r\n            setLoadPage(false);\r\n        });\r\n    }, [dispatch, category_id]);\r\n\r\n    return (\r\n        <main>\r\n            <Container>\r\n                {posts?.length > 0 ? (\r\n                    <Row>\r\n                        <Col lg={8}>\r\n                            <PostList posts={posts} />\r\n                            {!isLoadMore ? (\r\n                                <Button\r\n                                    variant='outline-secondary'\r\n                                    className='load-more'\r\n                                    disabled={loadMore}\r\n                                    onClick={!loadMore ? handleLoadMore : null}\r\n                                >\r\n                                    {/* <span>\r\n                                        {loadMore ? \"Đang tải ...\" : \"Xem thêm\"}{\" \"}\r\n                                    </span> */}\r\n                                    {loadMore ? (\r\n                                        <>\r\n                                            <Spinner\r\n                                                as='span'\r\n                                                animation='border'\r\n                                                size='sm'\r\n                                                role='status'\r\n                                                aria-hidden='true'\r\n                                            />{\" \"}\r\n                                            Đang tải ...\r\n                                        </>\r\n                                    ) : (\r\n                                        \"Xem thêm\"\r\n                                    )}\r\n                                </Button>\r\n                            ) : null}\r\n                        </Col>\r\n                    </Row>\r\n                ) : (\r\n                    <PageNotFound />\r\n                )}\r\n            </Container>\r\n\r\n            <OnToTop />\r\n            <LoadingPage isLoading={loadPage} />\r\n        </main>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nexport default function PostCommentForm({\r\n    handleCreateComment,\r\n    isLoading = false,\r\n    avatarUser,\r\n}) {\r\n    const [comment, setComment] = useState(\"\");\r\n    const onChangeData = (e) => {\r\n        setComment(e.target.value);\r\n    };\r\n    const onSubmitData = (e) => {\r\n        e.preventDefault();\r\n        if (handleCreateComment && typeof handleCreateComment === \"function\") {\r\n            handleCreateComment(comment);\r\n        }\r\n        setComment(\"\");\r\n    };\r\n    return (\r\n        <div className='ass1-add-comment'>\r\n            <Form.Group>\r\n                <Form.Row>\r\n                    <Link to='' className='post_item_avatar'>\r\n                        <img src={avatarUser} alt='avatar' />\r\n                    </Link>\r\n                    <Form.Control\r\n                        type='text'\r\n                        value={comment}\r\n                        onChange={onChangeData}\r\n                        placeholder='comment ...'\r\n                    />\r\n                </Form.Row>\r\n            </Form.Group>\r\n\r\n            <div className='ass1-add-comment__content'>\r\n                <Button\r\n                    variant='primary'\r\n                    type='submit'\r\n                    disabled={isLoading}\r\n                    onClick={!isLoading ? onSubmitData : null}\r\n                    className='ass1-add-comment__btn-save ass1-btn-icon'\r\n                >\r\n                    {isLoading ? \"Loading…\" : \"Bình luận\"}\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst orderBy = (state) => state.orderBy;\r\nconst orderDir = (state) => state.orderDir;\r\nconst listComments = (state) => state.list;\r\n\r\nconst listCommentSort = createSelector(\r\n    orderBy,\r\n    orderDir,\r\n    listComments,\r\n    (orderBy, orderDir, listComments) => {\r\n        if (orderBy === \"name\") orderBy = \"fullname\";\r\n        if (orderBy === \"latest\") orderBy = \"time_added\";\r\n        return listComments.sort(function (a, b) {\r\n            let indexNumber = 1; // desc\r\n            if (orderDir === \"asc\") indexNumber = -1;\r\n\r\n            if (a[orderBy] !== b[orderBy]) {\r\n                return a[orderBy] > b[orderBy] ? indexNumber : -indexNumber;\r\n            } else {\r\n                return 0;\r\n            }\r\n        });\r\n    }\r\n);\r\n\r\nexport default listCommentSort;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PATHS } from \"../../constants\";\r\nimport { useDateTime, useIcons } from \"../../utilities/hook\";\r\nexport default function PostCommentItem({ comment }) {\r\n    const dateTimeHook = useDateTime;\r\n    const Icons = useIcons();\r\n\r\n    if (!comment) return null;\r\n\r\n    const {\r\n        // CID: commentID,\r\n        // PID: postID,\r\n        USERID: userID,\r\n        fullname: userName,\r\n        profilepicture: userAvatar,\r\n        comment: contentComment,\r\n        time_added: timeCreated,\r\n    } = comment;\r\n\r\n    const { relativeTimeStr } = dateTimeHook({ date_time: timeCreated });\r\n    const linkUser = PATHS.USER_DETAIL.replace(\":user_id\", userID);\r\n    return (\r\n        <div className='ass1-comments__section'>\r\n            <Link to={linkUser} className='post_item_avatar'>\r\n                <img src={userAvatar || \"/images/avatar1.jpg\"} alt='' />\r\n            </Link>\r\n            <div className='ass1-comments__content'>\r\n                <Link to={linkUser} className='ass1-comments__name'>\r\n                    {userName}\r\n                </Link>\r\n                <span className='ass1-comments__passed'>{relativeTimeStr}</span>\r\n                <Link to='/' className='ass1-comments__btn-reply ass1-btn-icon'>\r\n                    <Icons.Reply /> <span>Trả lời</span>\r\n                </Link>\r\n                <p>{contentComment}</p>\r\n                <div className='ass1-comments__info'>\r\n                    <Link\r\n                        to='/'\r\n                        className='ass1-comments__btn-upvote ass1-btn-icon'\r\n                    >\r\n                        <Icons.ThumbsUp />\r\n                        <span>901</span>\r\n                    </Link>\r\n                    <Link\r\n                        to='/'\r\n                        className='ass1-comments__btn-down ass1-btn-icon'\r\n                    >\r\n                        <Icons.ThumbsDown />\r\n                        <span>36</span>\r\n                    </Link>\r\n                    {/* <Link\r\n                        to='/'\r\n                        className='ass1-comments__btn-flag ass1-btn-icon'\r\n                    >\r\n                        <Icons.Flag />\r\n                    </Link> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    actFetchCommentAsync,\r\n    actOnSelectSortCommnet,\r\n} from \"../../store/comment/actions\";\r\nimport listCommentSort from \"../../store/comment/selector/listCommentSort\";\r\nimport PostCommentItem from \"./Post.Comment.Item\";\r\nimport { useIcons } from \"../../utilities/hook\";\r\n\r\n//\r\nexport default function PostCommentList({ postid }) {\r\n    const dispatch = useDispatch();\r\n    const Icons = useIcons();\r\n    const orderBy = useSelector((state) => state.Comments.PostComments.orderBy);\r\n    const orderDir = useSelector(\r\n        (state) => state.Comments.PostComments.orderDir\r\n    );\r\n    const listComments = useSelector((state) =>\r\n        listCommentSort(state.Comments.PostComments)\r\n    );\r\n\r\n    const isHasComments = listComments && listComments.length > 0;\r\n\r\n    const [orderDirLocal, setOrderDirLocal] = useState(orderDir);\r\n    const [orderByLocal, setOrderByLocal] = useState(orderBy);\r\n\r\n    //\r\n    useEffect(() => {\r\n        dispatch(actFetchCommentAsync({ postid }));\r\n    }, [postid, dispatch]);\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            actOnSelectSortCommnet({\r\n                orderBy: orderByLocal,\r\n                orderDir: orderDirLocal,\r\n            })\r\n        );\r\n    }, [orderByLocal, orderDirLocal, dispatch]);\r\n\r\n    const onChangeSelect = useCallback((e) => {\r\n        setOrderByLocal(e.target.value);\r\n    }, []);\r\n\r\n    const onChangeTypeSort = useCallback(\r\n        (keyField) => () => {\r\n            setOrderDirLocal(keyField);\r\n        },\r\n        []\r\n    );\r\n\r\n    return (\r\n        <div className='ass1-comments'>\r\n            <div className='ass1-comments__head'>\r\n                <div className='ass1-comments__title'>\r\n                    <span>{listComments.length || 0} Bình luận</span>\r\n                </div>\r\n                <div className='ass1-comments__options'>\r\n                    <Form.Control\r\n                        as='select'\r\n                        onChange={onChangeSelect}\r\n                        value={orderBy}\r\n                    >\r\n                        <option value='name'>Name</option>\r\n                        <option value='latest'>Latest</option>\r\n                    </Form.Control>\r\n                    <div\r\n                        className={`form-icon form-icon__sortUp ${\r\n                            orderDirLocal === \"asc\" ? \"active\" : \"\"\r\n                        }`}\r\n                        onClick={onChangeTypeSort(\"asc\")}\r\n                    >\r\n                        <Icons.SortAmountUp />\r\n                    </div>\r\n                    <div\r\n                        className={`form-icon form-icon__sortDown ${\r\n                            orderDirLocal === \"desc\" ? \"active\" : \"\"\r\n                        }`}\r\n                        onClick={onChangeTypeSort(\"desc\")}\r\n                    >\r\n                        <Icons.SortAmountDown />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {isHasComments &&\r\n                listComments.map((comment, index) => {\r\n                    return <PostCommentItem key={index} comment={comment} />;\r\n                })}\r\n        </div>\r\n    );\r\n}\r\n","import PostDetail from \"./PostDetail\";\r\nexport default PostDetail;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../../components/Post/Post.scss\";\r\n//\r\nimport { useParams, useHistory, Link, useRouteMatch } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { PATHS, IMAGE_DEFAULT } from \"../../constants\";\r\n// Components Library\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { NotificationManager } from \"react-notifications\";\r\n\r\n// Components App\r\nimport LoadingPage from \"../../components/Loading\";\r\nimport PostItem from \"../../components/Post/Post.Item\";\r\nimport PostCommentForm from \"../../components/Post/Post.Comment.Form\";\r\nimport PostCommentList from \"../../components/Post/Post.Comment.List\";\r\n// Service\r\nimport { actFetchPostDetailAsync } from \"../../store/post/actions\";\r\nimport { actCreateNewCommentAsync } from \"../../store/comment/actions\";\r\nexport default function PostDetail() {\r\n    const { post_id } = useParams();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [loadPage, setLoadPage] = useState(false);\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    const matchPostDetail = useRouteMatch(PATHS.POST_DETAIL)?.isExact;\r\n\r\n    const PostDetail = useSelector((state) => state.Posts.PostDetail);\r\n    const currentUser = useSelector((state) => state.User.currentUser);\r\n    const post = PostDetail?.post;\r\n    const userInfo = PostDetail?.user;\r\n    const categories = PostDetail?.categories;\r\n\r\n    //\r\n    const idxDefaultAvatar = post?.USERID % IMAGE_DEFAULT.avatar.length;\r\n    const avatar =\r\n        userInfo?.profilepicture || IMAGE_DEFAULT.avatar[idxDefaultAvatar];\r\n    const userLink = PATHS.USER_DETAIL.replace(\":user_id\", post?.USERID);\r\n\r\n    //\r\n    useEffect(() => {\r\n        setLoadPage(true);\r\n        dispatch(actFetchPostDetailAsync({ postid: post_id })).then((res) => {\r\n            if (!res.ok) {\r\n                NotificationManager.error(res.message, null, 1000);\r\n                setLoadPage(false);\r\n                history.push(PATHS.HOMEPAGE);\r\n            } else {\r\n                setLoadPage(false);\r\n            }\r\n        });\r\n    }, [dispatch, post_id, history]);\r\n\r\n    const handleCreateComment = (comment) => {\r\n        setLoading(true);\r\n        if (comment && post_id) {\r\n            dispatch(\r\n                actCreateNewCommentAsync({ comment, postid: post_id })\r\n            ).then((res) => {\r\n                if (res.ok) {\r\n                    NotificationManager.success(res.message, null, 1000);\r\n                } else {\r\n                    NotificationManager.error(res.message, null, 1000);\r\n                }\r\n                setLoading(false);\r\n            });\r\n        }\r\n    };\r\n    return (\r\n        <main>\r\n            <Container>\r\n                <Row>\r\n                    <Col lg={8}>\r\n                        <div className='ass1-section__list'>\r\n                            <PostItem\r\n                                post={post}\r\n                                categories={categories}\r\n                                isPostDetail={true}\r\n                                userInfo={userInfo}\r\n                            />\r\n                            {currentUser ? (\r\n                                <PostCommentForm\r\n                                    handleCreateComment={handleCreateComment}\r\n                                    isLoading={isLoading}\r\n                                    avatarUser={currentUser?.profilepicture}\r\n                                />\r\n                            ) : (\r\n                                <div className='ass1-add-comment'>\r\n                                    <Link to={PATHS.LOGIN}>\r\n                                        Đăng nhập để bình luận\r\n                                    </Link>\r\n                                </div>\r\n                            )}\r\n\r\n                            <PostCommentList postid={post_id} />\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={4}>\r\n                        <div\r\n                            className={`ass1-section__list ${\r\n                                matchPostDetail ? \"stickySidebar\" : \"\"\r\n                            }`}\r\n                        >\r\n                            <Card className='post__info-author'>\r\n                                <Link to={userLink}>\r\n                                    <Card.Img\r\n                                        variant='top'\r\n                                        src={avatar}\r\n                                        className='post_item_avatar'\r\n                                    />\r\n                                </Link>\r\n\r\n                                <hr />\r\n                                <Card.Body>\r\n                                    <Card.Title>\r\n                                        {userInfo?.fullname}\r\n                                    </Card.Title>\r\n                                    <Card.Text>\r\n                                        <span>Email:</span> {userInfo?.email}\r\n                                    </Card.Text>\r\n                                    <Card.Text>\r\n                                        <span>Description:</span>{\" \"}\r\n                                        {userInfo?.description}\r\n                                    </Card.Text>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <LoadingPage isLoading={loadPage} />\r\n        </main>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { IMAGE_DEFAULT } from \"../../constants\";\r\nimport { useIcons } from \"../../utilities/hook\";\r\n// data default\r\nconst avatarDefault = IMAGE_DEFAULT?.avatar[0];\r\n//\r\nexport default function ProfileAvatar({ avatarUser, onShowInputFile }) {\r\n    const Icons = useIcons();\r\n\r\n    return (\r\n        <div className='avatar' onClick={onShowInputFile}>\r\n            <img\r\n                src={avatarUser || avatarDefault}\r\n                alt='avatar'\r\n                id='avatar__profile'\r\n            />\r\n            <Icons.Camera />\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function ProfileTitle() {\r\n    return <p className='ass1-login__title'>Profile</p>;\r\n}\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nexport default function ProfileForm({\r\n    isLoading,\r\n    userInfo,\r\n    onChangeData,\r\n    onChangeImage,\r\n    handleSubmit,\r\n}) {\r\n    return (\r\n        <form action='#'>\r\n            <input\r\n                type='text'\r\n                value={userInfo?.fullname || \"\"}\r\n                onChange={onChangeData(\"fullname\")}\r\n                className='form-control'\r\n                placeholder='Tên ...'\r\n                required\r\n            />\r\n            <select\r\n                value={userInfo?.gender || \"\"}\r\n                onChange={onChangeData(\"gender\")}\r\n                className='form-control'\r\n            >\r\n                <option value>Giới tính</option>\r\n                <option value='nam'>Nam</option>\r\n                <option value='nu'>Nữ</option>\r\n            </select>\r\n            <input\r\n                type='file'\r\n                onChange={onChangeImage}\r\n                name='avatar'\r\n                placeholder='Ảnh đại diện'\r\n                className='form-control'\r\n                id='input_file'\r\n            />\r\n            <textarea\r\n                className='form-control'\r\n                value={userInfo?.description || \"\"}\r\n                onChange={onChangeData(\"description\")}\r\n                cols={30}\r\n                rows={5}\r\n                placeholder='Mô tả ngắn ...'\r\n            />\r\n            <div className='ass1-login__send justify-content-center'>\r\n                <Button\r\n                    type='submit'\r\n                    disabled={isLoading}\r\n                    onClick={!isLoading ? handleSubmit : null}\r\n                >\r\n                    <span> {isLoading ? \"Loading…\" : \"Cập nhật\"}</span>\r\n                </Button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n","import UserProfile from \"./UserProfile\";\r\nexport default UserProfile;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../../components/Profile/profile.scss\";\r\nimport {\r\n    ProfileTitle,\r\n    ProfileForm,\r\n    ProfileAvatar,\r\n} from \"../../components/Profile\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    actUpdateProfileAsync,\r\n    actFetchUserByIDAsync,\r\n} from \"../../store/user/actions\";\r\nimport { useAuth, useCheckImageUrl, useUserID } from \"../../utilities/hook\";\r\nimport { NotificationManager } from \"react-notifications\";\r\n\r\n//\r\nexport default function UserProfile() {\r\n    useAuth();\r\n    const dispatch = useDispatch();\r\n    const userid = useUserID();\r\n    const checkImageUrl = useCheckImageUrl;\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [userInfo, setUserInfo] = useState(null);\r\n    const [objFileAvatar, setObjFileAvatar] = useState(null);\r\n    const currentUser = useSelector((state) => state.User.currentUser);\r\n\r\n    //\r\n    useEffect(() => {\r\n        setUserInfo(currentUser);\r\n    }, [currentUser]);\r\n    //\r\n    useEffect(() => {\r\n        if (userid && !currentUser) {\r\n            dispatch(actFetchUserByIDAsync({ userid }));\r\n        }\r\n    }, [userid, dispatch, currentUser]);\r\n\r\n    const onChangeData = (keyField) => (e) => {\r\n        setUserInfo({\r\n            ...userInfo,\r\n            [keyField]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const onChangeImage = (e) => {\r\n        const file = e.target.files[0];\r\n        const preview = document.getElementById(\"avatar__profile\");\r\n        const isImage = checkImageUrl(file?.name);\r\n\r\n        if (isImage) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = (e) => {\r\n                preview.src = reader.result;\r\n                setObjFileAvatar(file);\r\n            };\r\n            if (file) {\r\n                reader.readAsDataURL(file);\r\n            }\r\n        } else {\r\n            e.target.value = \"\";\r\n            preview.src = userInfo?.profilepicture;\r\n            NotificationManager.error(\"Hình ảnh không hợp lệ !\", null, 600);\r\n        }\r\n    };\r\n\r\n    const onShowInputFile = () => {\r\n        const inputFile = document.getElementById(\"input_file\");\r\n        if (inputFile && inputFile.click) {\r\n            inputFile.click();\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (isLoading) return;\r\n        setLoading(true);\r\n        const { gender, fullname, description } = userInfo;\r\n        const data = {\r\n            avatar: objFileAvatar,\r\n            gender,\r\n            fullname,\r\n            description,\r\n        };\r\n\r\n        dispatch(actUpdateProfileAsync(data))\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    NotificationManager.success(res.message, null, 600);\r\n                } else {\r\n                    NotificationManager.error(res.message, null, 600);\r\n                }\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const injectedPropsForm = {\r\n        isLoading,\r\n        userInfo,\r\n        onChangeData,\r\n        onChangeImage,\r\n        handleSubmit,\r\n    };\r\n    const injectedPropsAvatar = {\r\n        avatarUser: userInfo?.profilepicture,\r\n        onShowInputFile: onShowInputFile,\r\n    };\r\n    //\r\n    return (\r\n        <main>\r\n            <div className='ass1-login'>\r\n                <div className='ass1-login__content'>\r\n                    <ProfileTitle />\r\n                    <div className='ass1-login__form'>\r\n                        <ProfileAvatar {...injectedPropsAvatar} />\r\n                        <ProfileForm {...injectedPropsForm} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n","import SearchResult from \"./SearchResult\";\r\n\r\nexport default SearchResult;\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\nimport { PATHS } from \"../../constants\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport { actFetchListSearchAsync } from \"../../store/post/actions\";\r\n//\r\n// react-bootstrap\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n// component app\r\nimport PostList from \"../../components/Post/Post.List\";\r\nimport LoadingPage from \"../../components/Loading\";\r\nimport OnToTop from \"../../components/OnToTop\";\r\nimport PageNotFound from \"../../components/PageNotFound\";\r\n\r\n//\r\n//\r\nexport default function SearchResult() {\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n    const [loadPage, setLoadPage] = useState(false);\r\n    const [posts, setPosts] = useState(null);\r\n\r\n    const querySearch = useMemo(() => {\r\n        const parsed = queryString.parse(location.search);\r\n        if (parsed.q) {\r\n            return parsed.q;\r\n        } else {\r\n            history.push(PATHS.HOMEPAGE);\r\n        }\r\n    }, [location, history]);\r\n\r\n    useEffect(() => {\r\n        if (querySearch) {\r\n            setLoadPage(true);\r\n            dispatch(actFetchListSearchAsync({ query: querySearch })).then(\r\n                (res) => {\r\n                    if (res.ok) {\r\n                        setPosts(res.posts);\r\n                        if (res.posts.length > 0) {\r\n                            NotificationManager.success(\r\n                                res.message,\r\n                                null,\r\n                                1800\r\n                            );\r\n                        }\r\n                    } else {\r\n                        NotificationManager.error(res.message, null, 600);\r\n                    }\r\n                    setLoadPage(false);\r\n                }\r\n            );\r\n        }\r\n    }, [querySearch, dispatch]);\r\n\r\n    const listPostActive = useMemo(() => {\r\n        if (posts) {\r\n            return posts.filter((post) => post.status === \"1\");\r\n        }\r\n        return [];\r\n    }, [posts]);\r\n\r\n    return (\r\n        <main>\r\n            <Container>\r\n                {posts?.length > 0 ? (\r\n                    <Row>\r\n                        <Col lg={8}>\r\n                            <PostList posts={listPostActive} />\r\n                        </Col>\r\n                    </Row>\r\n                ) : (\r\n                    <PageNotFound />\r\n                )}\r\n            </Container>\r\n            <OnToTop />\r\n            <LoadingPage isLoading={loadPage} />\r\n        </main>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PATHS } from \"../../constants\";\r\nimport { useUserID } from \"../../utilities/hook\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faBook,\r\n    faPaperPlane,\r\n    faUserCheck,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n//\r\nexport default function UserDetailInfo({ userInfo, countPost }) {\r\n    const currentUserID = useUserID();\r\n    return (\r\n        <div className='ass1-head-user'>\r\n            <div className='ass1-head-user__content'>\r\n                <div className='ass1-head-user__image'>\r\n                    <img\r\n                        src={\r\n                            userInfo?.profilepicture ||\r\n                            \"/images/cat-1634369_1920.jpg\"\r\n                        }\r\n                        alt='avatar'\r\n                    />\r\n                </div>\r\n                <div className='ass1-head-user__info'>\r\n                    <div className='ass1-head-user__info-head'>\r\n                        <div className='ass1-head-user__name'>\r\n                            <span>{userInfo?.fullname || \"Secret User\"}</span>\r\n                            <i>\r\n                                <img\r\n                                    src='/fonts/emotion/svg/Verified.svg'\r\n                                    alt='Verified'\r\n                                />\r\n                            </i>\r\n                        </div>\r\n                        <div className='w-100' />\r\n\r\n                        {currentUserID !== userInfo?.USERID ? (\r\n                            <Link\r\n                                to='###'\r\n                                className='ass1-head-user__btn-follow ass1-btn'\r\n                            >\r\n                                Theo dõi\r\n                            </Link>\r\n                        ) : (\r\n                            <>\r\n                                {\" \"}\r\n                                <Link\r\n                                    to={PATHS.CHANGE_PASSWORD}\r\n                                    className='ass1-head-user__btn-follow ass1-btn'\r\n                                >\r\n                                    Đổi mật khẩu\r\n                                </Link>\r\n                                <Link\r\n                                    to={PATHS.USER_PROFILE}\r\n                                    className='ass1-head-user__btn-follow ass1-btn'\r\n                                >\r\n                                    Profile\r\n                                </Link>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                    <div className='ass1-head-user__info-statistic'>\r\n                        <div className='ass1-btn-icon'>\r\n                            <i>\r\n                                <FontAwesomeIcon icon={faBook} />\r\n                            </i>\r\n                            <span>Bài viết: {countPost}</span>\r\n                        </div>\r\n                        <div className='ass1-btn-icon'>\r\n                            <i>\r\n                                <FontAwesomeIcon icon={faPaperPlane} />\r\n                            </i>\r\n                            <span>Theo dõi: 0</span>\r\n                        </div>\r\n                        <div className='ass1-btn-icon'>\r\n                            <i>\r\n                                <FontAwesomeIcon icon={faUserCheck} />\r\n                            </i>\r\n                            <span>Đang theo dõi: 0</span>\r\n                        </div>\r\n                    </div>\r\n                    <p>{userInfo?.description || \"No description\"}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport PostList from \"../Post/Post.List\";\r\nexport default function UserDetailPost({ userPosts }) {\r\n    return (\r\n        <Container>\r\n            <PostList posts={userPosts} classCol='col-lg-6' classRow='row' />;\r\n        </Container>\r\n    );\r\n}\r\n","import UserDetail from \"./UserDetail\";\r\nexport default UserDetail;\r\n","import React, { useEffect } from \"react\";\r\nimport \"../../components/UserDetail/Style.UserDetail.scss\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useAuth, useUserID } from \"../../utilities/hook\";\r\nimport { actFetchPostUserByIDAsync } from \"../../store/user/actions\";\r\n// component\r\nimport LoadingPage from \"../../components/Loading\";\r\nimport { UserDetailPost, UserDetailInfo } from \"../../components/UserDetail\";\r\nimport OnToTop from \"../../components/OnToTop\";\r\n//\r\nexport default function UserDetail() {\r\n    useAuth();\r\n    const currUserID = useUserID();\r\n    const dispatch = useDispatch();\r\n    const userid = useParams()?.user_id;\r\n    const isLoading = useSelector((state) => state.App.isLoading);\r\n    const userPosts = useSelector((state) => state.User.userPosts);\r\n    const userInfo = useSelector((state) => state.User.userInfo);\r\n\r\n    useEffect(() => {\r\n        if (currUserID) {\r\n            dispatch(actFetchPostUserByIDAsync({ userid }));\r\n        }\r\n    }, [userid, currUserID, dispatch]);\r\n\r\n    return (\r\n        <main>\r\n            <div className='container'>\r\n                <UserDetailInfo\r\n                    userInfo={userInfo[userid]}\r\n                    countPost={userPosts[userid]?.length}\r\n                />\r\n                <UserDetailPost userPosts={userPosts[userid]} />\r\n            </div>\r\n            <OnToTop />\r\n            <LoadingPage isLoading={isLoading} />\r\n        </main>\r\n    );\r\n}\r\n","import ChangePassWord from \"./ChangePassWord\";\r\nexport default ChangePassWord;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport \"./Style.Password.scss\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { faEye, faEyeSlash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actChangePasswordAsync } from \"../../store/auth/actions\";\r\nimport { useAuth } from \"../../utilities/hook\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { PASSWORD_VALIDATOR } from \"../../constants/FormValidator\";\r\nexport default function ChangePassWord() {\r\n    useAuth();\r\n    const dispatch = useDispatch();\r\n    const [showValue, setShowValue] = useState({\r\n        old: false,\r\n        new: false,\r\n        reNew: false,\r\n    });\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n    } = useForm();\r\n\r\n    const handleShowValue = useCallback(\r\n        (keyField) => () => {\r\n            setShowValue({\r\n                ...showValue,\r\n                [keyField]: !showValue[keyField],\r\n            });\r\n        },\r\n        [showValue]\r\n    );\r\n\r\n    const handleChangePassword = useCallback(\r\n        (passwordInfo) => {\r\n            const { oldPassword, newPassword, reNewPassword } = passwordInfo;\r\n\r\n            dispatch(\r\n                actChangePasswordAsync({\r\n                    oldPassword,\r\n                    newPassword,\r\n                    reNewPassword,\r\n                })\r\n            ).then((res) => {\r\n                if (res.ok) {\r\n                    NotificationManager.success(res.message, null, 1000);\r\n                } else {\r\n                    NotificationManager.error(res.message, null, 1000);\r\n                }\r\n            });\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    //\r\n    return (\r\n        <main>\r\n            <div className='ass1-login'>\r\n                <div className='ass1-login__content'>\r\n                    <p>Đổi mật khẩu</p>\r\n                    <div className='ass1-login__form'>\r\n                        <form action='#'>\r\n                            <div className='form__group'>\r\n                                <input\r\n                                    type={showValue.old ? \"text\" : \"password\"}\r\n                                    className='form-control'\r\n                                    placeholder='Mật khẩu cũ'\r\n                                    {...register(\"oldPassword\", {\r\n                                        required: true,\r\n                                    })}\r\n                                />\r\n                                {errors?.oldPassword?.type === \"required\" && (\r\n                                    <span className='message'>\r\n                                        {PASSWORD_VALIDATOR.messRequired}\r\n                                    </span>\r\n                                )}\r\n\r\n                                <FontAwesomeIcon\r\n                                    onClick={handleShowValue(\"old\")}\r\n                                    icon={showValue.old ? faEyeSlash : faEye}\r\n                                />\r\n                            </div>\r\n                            <div className='form__group'>\r\n                                <input\r\n                                    type={showValue.new ? \"text\" : \"password\"}\r\n                                    className='form-control'\r\n                                    placeholder='Mật khẩu mới'\r\n                                    {...register(\"newPassword\", {\r\n                                        required: true,\r\n                                    })}\r\n                                />\r\n                                {errors?.newPassword?.type === \"required\" && (\r\n                                    <span className='message'>\r\n                                        {PASSWORD_VALIDATOR.messRequired}\r\n                                    </span>\r\n                                )}\r\n                                <FontAwesomeIcon\r\n                                    onClick={handleShowValue(\"new\")}\r\n                                    icon={showValue.new ? faEyeSlash : faEye}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className='form__group'>\r\n                                <input\r\n                                    type={showValue.reNew ? \"text\" : \"password\"}\r\n                                    className='form-control'\r\n                                    placeholder='Xác nhận mật khẩu mới'\r\n                                    {...register(\"reNewPassword\", {\r\n                                        required: true,\r\n                                    })}\r\n                                />\r\n                                {errors?.reNewPassword?.type === \"required\" && (\r\n                                    <span className='message'>\r\n                                        {PASSWORD_VALIDATOR.messRequired}\r\n                                    </span>\r\n                                )}\r\n                                <FontAwesomeIcon\r\n                                    onClick={handleShowValue(\"reNew\")}\r\n                                    icon={showValue.reNew ? faEyeSlash : faEye}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className='ass1-login__send justify-content-center'>\r\n                                <Button\r\n                                    variant='primary'\r\n                                    onClick={handleSubmit(handleChangePassword)}\r\n                                >\r\n                                    Đổi mật khẩu\r\n                                </Button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n","import Register from \"./Register\";\r\nexport default Register;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport \"./Style.Register.scss\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { faEye, faEyeSlash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actRegisterAsync } from \"../../store/auth/actions\";\r\nimport { PATHS } from \"../../constants\";\r\nimport LoadPage from \"../../components/Loading\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n    FULLNAME_VALIDATOR,\r\n    PASSWORD_VALIDATOR,\r\n    EMAIL_VALIDATOR,\r\n} from \"../../constants/FormValidator\";\r\n\r\nexport default function Register() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [showValue, setShowValue] = useState({\r\n        new: false,\r\n        reNew: false,\r\n    });\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n    } = useForm();\r\n\r\n    const isLoading = useSelector((state) => state.App.isLoading);\r\n\r\n    const handleShowValue = useCallback(\r\n        (keyField) => () => {\r\n            setShowValue({\r\n                ...showValue,\r\n                [keyField]: !showValue[keyField],\r\n            });\r\n        },\r\n        [showValue]\r\n    );\r\n\r\n    const handleRegister = useCallback(\r\n        (registerInfo) => {\r\n            const { email, fullname, password, repassword } = registerInfo;\r\n\r\n            dispatch(\r\n                actRegisterAsync({ email, fullname, password, repassword })\r\n            ).then((res) => {\r\n                if (res.ok) {\r\n                    NotificationManager.success(\r\n                        \"Đăng ký thành công\",\r\n                        null,\r\n                        600\r\n                    );\r\n                    history.push(PATHS.LOGIN);\r\n                } else {\r\n                    NotificationManager.error(res.message, null, 600);\r\n                }\r\n            });\r\n        },\r\n        [dispatch, history]\r\n    );\r\n\r\n    //\r\n    return (\r\n        <main>\r\n            <div className='ass1-login'>\r\n                <div className='ass1-login__content'>\r\n                    <p>Đăng ký một tài khoản</p>\r\n                    <div className='ass1-login__form'>\r\n                        <form action='#'>\r\n                            <div className='form__group'>\r\n                                <input\r\n                                    type='text'\r\n                                    className='form-control'\r\n                                    placeholder='Tên hiển thị'\r\n                                    {...register(\"fullname\", {\r\n                                        required: true,\r\n                                    })}\r\n                                />\r\n                                {errors?.fullname?.type === \"required\" && (\r\n                                    <span className='message'>\r\n                                        {FULLNAME_VALIDATOR.messRequired}\r\n                                    </span>\r\n                                )}\r\n                            </div>\r\n                            <div className='form__group'>\r\n                                <input\r\n                                    type='email'\r\n                                    className='form-control'\r\n                                    placeholder='Email'\r\n                                    {...register(\"email\", {\r\n                                        required: true,\r\n                                        pattern: EMAIL_VALIDATOR.pattern,\r\n                                    })}\r\n                                />\r\n                                {errors?.email?.type === \"required\" && (\r\n                                    <span className='message'>\r\n                                        {EMAIL_VALIDATOR.messRequired}\r\n                                    </span>\r\n                                )}\r\n                                {errors?.email?.type === \"pattern\" && (\r\n                                    <span className='message'>\r\n                                        {EMAIL_VALIDATOR.messInvalid}\r\n                                    </span>\r\n                                )}\r\n                            </div>\r\n                            <div className='form__group'>\r\n                                <input\r\n                                    type={showValue.new ? \"text\" : \"password\"}\r\n                                    className='form-control'\r\n                                    placeholder='Mật khẩu'\r\n                                    {...register(\"password\", {\r\n                                        required: true,\r\n                                        minLength: PASSWORD_VALIDATOR.minLength,\r\n                                    })}\r\n                                />\r\n                                {errors?.password?.type === \"required\" && (\r\n                                    <span className='message'>\r\n                                        {PASSWORD_VALIDATOR.messRequired}\r\n                                    </span>\r\n                                )}\r\n                                {errors?.password?.type === \"minLength\" && (\r\n                                    <span className='message'>\r\n                                        {PASSWORD_VALIDATOR.messMinLength}\r\n                                    </span>\r\n                                )}\r\n                                <FontAwesomeIcon\r\n                                    onClick={handleShowValue(\"new\")}\r\n                                    icon={showValue.new ? faEyeSlash : faEye}\r\n                                />\r\n                            </div>\r\n                            <div className='form__group'>\r\n                                <input\r\n                                    type={showValue.reNew ? \"text\" : \"password\"}\r\n                                    className='form-control'\r\n                                    placeholder='Nhập lại mật khẩu'\r\n                                    {...register(\"repassword\", {\r\n                                        required: true,\r\n                                    })}\r\n                                />\r\n                                {errors?.repassword?.type === \"required\" && (\r\n                                    <span className='message'>\r\n                                        {PASSWORD_VALIDATOR.messRequired}\r\n                                    </span>\r\n                                )}\r\n                                <FontAwesomeIcon\r\n                                    onClick={handleShowValue(\"reNew\")}\r\n                                    icon={showValue.reNew ? faEyeSlash : faEye}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className='ass1-login__send'>\r\n                                <Link to={PATHS.LOGIN}>Đăng nhập</Link>\r\n                                <Button\r\n                                    variant='primary'\r\n                                    onClick={handleSubmit(handleRegister)}\r\n                                >\r\n                                    Đăng ký\r\n                                </Button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <LoadPage isLoading={isLoading} />\r\n        </main>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n//\r\nexport default function PostUploadModal({\r\n    show,\r\n    handleClose,\r\n    categoriesPostEdit,\r\n    getCategoriesNewPost,\r\n}) {\r\n    const [catePost, setCatePost] = useState({});\r\n    const categories = useSelector((state) => state.Categories.listCategories);\r\n\r\n    useEffect(() => {\r\n        if (categoriesPostEdit) {\r\n            let hashCategorisPostEdit = {};\r\n            for (let catePostEdit of categoriesPostEdit) {\r\n                let { tag_index, tag_value } = catePostEdit;\r\n                hashCategorisPostEdit[tag_index] = tag_value;\r\n            }\r\n            setCatePost({ ...hashCategorisPostEdit });\r\n        }\r\n    }, [categoriesPostEdit]);\r\n\r\n    const handleChangeCategories = (keyName) => (e) => {\r\n        const valueChecked = e.target.value;\r\n        const isChecked = e.target.checked;\r\n        if (isChecked) {\r\n            setCatePost({\r\n                ...catePost,\r\n                [e.target.value]: keyName,\r\n            });\r\n        } else {\r\n            if (catePost.hasOwnProperty(valueChecked)) {\r\n                delete catePost[valueChecked];\r\n                setCatePost({ ...catePost });\r\n            }\r\n        }\r\n    };\r\n\r\n    const _getCategoriesNewPost = () => {\r\n        getCategoriesNewPost &&\r\n            typeof getCategoriesNewPost === \"function\" &&\r\n            getCategoriesNewPost(catePost);\r\n        handleClose();\r\n    };\r\n    return (\r\n        <Modal show={show} onHide={handleClose} animation={false} size='lg'>\r\n            <Modal.Header closeButton></Modal.Header>\r\n            <Modal.Body>\r\n                <Row>\r\n                    {categories?.map((category) => {\r\n                        const { text, id } = category;\r\n                        return (\r\n                            <Col xs={6} md={4} key={id} className='mb-3'>\r\n                                <Form.Check\r\n                                    onChange={handleChangeCategories(text)}\r\n                                    checked={catePost[id] ? true : false}\r\n                                    custom\r\n                                    value={id}\r\n                                    inline\r\n                                    label={text}\r\n                                    type='checkbox'\r\n                                    id={`custom-inline-checkbox-${id}`}\r\n                                />\r\n                            </Col>\r\n                        );\r\n                    })}\r\n                </Row>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant='success' onClick={_getCategoriesNewPost}>\r\n                    Save\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n","import LoadingChange from \"./Loading\";\r\nexport default LoadingChange;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./loading.scss\";\r\nexport default function LoadingChange({\r\n    isLoading = false,\r\n    text = \"Đang tải ...\",\r\n}) {\r\n    useEffect(() => {\r\n        let loadingEle = document.querySelector(\".loading-change_page\");\r\n        const bodyElement = document.querySelector(\"body\");\r\n        bodyElement.style.overflow = isLoading ? \"hidden\" : \"auto\";\r\n        loadingEle.classList.toggle(\"show\", isLoading);\r\n    }, [isLoading]);\r\n    return (\r\n        <div className='loading-change_page'>\r\n            <p>{text}</p>\r\n            <svg\r\n                xmlns='http://www.w3.org/2000/svg'\r\n                xmlnsXlink='http://www.w3.org/1999/xlink'\r\n                style={{\r\n                    margin: \"auto\",\r\n                    background: \"rgba(255, 255, 255, 0)\",\r\n                    display: \"block\",\r\n                }}\r\n                width='91px'\r\n                height='91px'\r\n                viewBox='0 0 100 100'\r\n                preserveAspectRatio='xMidYMid'\r\n            >\r\n                <g transform='translate(20 50)'>\r\n                    <circle cx={0} cy={0} r={4} fill='#969696'>\r\n                        <animateTransform\r\n                            attributeName='transform'\r\n                            type='scale'\r\n                            begin='-0.19946808510638298s'\r\n                            calcMode='spline'\r\n                            keySplines='0.3 0 0.7 1;0.3 0 0.7 1'\r\n                            values='0;1;0'\r\n                            keyTimes='0;0.5;1'\r\n                            dur='0.5319148936170213s'\r\n                            repeatCount='indefinite'\r\n                        />\r\n                    </circle>\r\n                </g>\r\n                <g transform='translate(40 50)'>\r\n                    <circle cx={0} cy={0} r={4} fill='#bdbdbd'>\r\n                        <animateTransform\r\n                            attributeName='transform'\r\n                            type='scale'\r\n                            begin='-0.13297872340425532s'\r\n                            calcMode='spline'\r\n                            keySplines='0.3 0 0.7 1;0.3 0 0.7 1'\r\n                            values='0;1;0'\r\n                            keyTimes='0;0.5;1'\r\n                            dur='0.5319148936170213s'\r\n                            repeatCount='indefinite'\r\n                        />\r\n                    </circle>\r\n                </g>\r\n                <g transform='translate(60 50)'>\r\n                    <circle cx={0} cy={0} r={4} fill='#9d9d9d'>\r\n                        <animateTransform\r\n                            attributeName='transform'\r\n                            type='scale'\r\n                            begin='-0.06648936170212766s'\r\n                            calcMode='spline'\r\n                            keySplines='0.3 0 0.7 1;0.3 0 0.7 1'\r\n                            values='0;1;0'\r\n                            keyTimes='0;0.5;1'\r\n                            dur='0.5319148936170213s'\r\n                            repeatCount='indefinite'\r\n                        />\r\n                    </circle>\r\n                </g>\r\n                <g transform='translate(80 50)'>\r\n                    <circle cx={0} cy={0} r={4} fill='#bdbdbd'>\r\n                        <animateTransform\r\n                            attributeName='transform'\r\n                            type='scale'\r\n                            begin='0s'\r\n                            calcMode='spline'\r\n                            keySplines='0.3 0 0.7 1;0.3 0 0.7 1'\r\n                            values='0;1;0'\r\n                            keyTimes='0;0.5;1'\r\n                            dur='0.5319148936170213s'\r\n                            repeatCount='indefinite'\r\n                        />\r\n                    </circle>\r\n                </g>\r\n            </svg>\r\n            {/* <svg\r\n                xmlns='http://www.w3.org/2000/svg'\r\n                xmlnsXlink='http://www.w3.org/1999/xlink'\r\n                style={{ margin: \"auto\", display: \"block\" }}\r\n                width='224px'\r\n                height='224px'\r\n                viewBox='0 0 100 100'\r\n                preserveAspectRatio='xMidYMid'\r\n            >\r\n                <circle\r\n                    cx={50}\r\n                    cy={50}\r\n                    r={0}\r\n                    fill='none'\r\n                    stroke='#1bbcdb'\r\n                    strokeWidth={4}\r\n                >\r\n                    <animate\r\n                        attributeName='r'\r\n                        repeatCount='indefinite'\r\n                        dur='1.0989010989010988s'\r\n                        values='0;40'\r\n                        keyTimes='0;1'\r\n                        keySplines='0 0.2 0.8 1'\r\n                        calcMode='spline'\r\n                        begin='-0.5494505494505494s'\r\n                    />\r\n                    <animate\r\n                        attributeName='opacity'\r\n                        repeatCount='indefinite'\r\n                        dur='1.0989010989010988s'\r\n                        values='1;0'\r\n                        keyTimes='0;1'\r\n                        keySplines='0.2 0 0.8 1'\r\n                        calcMode='spline'\r\n                        begin='-0.5494505494505494s'\r\n                    />\r\n                </circle>\r\n\r\n                <circle\r\n                    cx={50}\r\n                    cy={50}\r\n                    r={0}\r\n                    fill='none'\r\n                    stroke='#3be2f5'\r\n                    strokeWidth={4}\r\n                >\r\n                    <animate\r\n                        attributeName='r'\r\n                        repeatCount='indefinite'\r\n                        dur='1.0989010989010988s'\r\n                        values='0;40'\r\n                        keyTimes='0;1'\r\n                        keySplines='0 0.2 0.8 1'\r\n                        calcMode='spline'\r\n                    />\r\n                    <animate\r\n                        attributeName='opacity'\r\n                        repeatCount='indefinite'\r\n                        dur='1.0989010989010988s'\r\n                        values='1;0'\r\n                        keyTimes='0;1'\r\n                        keySplines='0.2 0 0.8 1'\r\n                        calcMode='spline'\r\n                    />\r\n                </circle>\r\n            </svg> */}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useCallback, useRef } from \"react\";\r\nimport \"./Style.Upload.scss\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { faImages, faPaw } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useCheckImageUrl, useAuth } from \"../../utilities/hook\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport PostUploadModal from \"../../components/PostUpload/PostUpload.Modal\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { PATHS } from \"../../constants\";\r\nimport { actCreateNewPostAsync } from \"../../store/post/actions\";\r\nimport LoadingChange from \"../../components/LoadingChange\";\r\n//\r\nconst initNewPost = {\r\n    obj_image: \"\",\r\n    post_content: \"\",\r\n    category: \"\",\r\n};\r\nconst imageNotAvailable = \"/images/no_image_available.jpg\";\r\nexport default function PostUpload() {\r\n    useAuth();\r\n    // custom hook\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const checkImageUrl = useCheckImageUrl;\r\n    //useRef\r\n    const inputFile = useRef(null);\r\n    const previewImage = useRef(null);\r\n\r\n    //useState\r\n    const [show, setShow] = useState(false);\r\n    const [newPost, setNewPost] = useState(initNewPost);\r\n    const [categoriesNewPost, setCategoriesNewPost] = useState(null);\r\n\r\n    const isLoading = useSelector((state) => state.App.isLoading);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const handleChangeData = useCallback(\r\n        (keyField) => (e) => {\r\n            setNewPost({\r\n                ...newPost,\r\n                [keyField]: e.target.value,\r\n            });\r\n        },\r\n        [newPost]\r\n    );\r\n\r\n    const handleChangeImage = (e) => {\r\n        const file = e.target.files[0];\r\n        const preview = previewImage.current;\r\n        const isImage = checkImageUrl(file?.name);\r\n        if (isImage) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = (e) => {\r\n                preview.src = reader.result;\r\n                setNewPost({\r\n                    ...newPost,\r\n                    obj_image: file,\r\n                });\r\n            };\r\n\r\n            if (file) {\r\n                reader.readAsDataURL(file);\r\n            }\r\n        } else {\r\n            e.target.value = \"\";\r\n            preview.src = imageNotAvailable;\r\n            NotificationManager.error(\"Hình ảnh không hợp lệ !\", null, 600);\r\n        }\r\n    };\r\n\r\n    const onShowInputFile = () => {\r\n        if (inputFile && inputFile.current) {\r\n            inputFile.current.click();\r\n        }\r\n    };\r\n\r\n    const getCategoriesNewPost = (categories) => {\r\n        if (typeof categories === \"object\" && categories !== null) {\r\n            const listCategories = Object.entries(categories);\r\n            const listNameCategoris = listCategories?.map(\r\n                (category) => category[1]\r\n            );\r\n            const listIdCategories = listCategories?.map(\r\n                (category) => category[0]\r\n            );\r\n            setNewPost({\r\n                ...newPost,\r\n                category: listIdCategories.join(\",\"),\r\n            });\r\n            setCategoriesNewPost(listNameCategoris);\r\n        }\r\n    };\r\n\r\n    const handleCreateNewPost = () => {\r\n        const { category, post_content, obj_image } = newPost;\r\n        dispatch(\r\n            actCreateNewPostAsync({ category, post_content, obj_image })\r\n        ).then((res) => {\r\n            if (res.ok) {\r\n                NotificationManager.success(res.message, null, 600);\r\n                history.push(\r\n                    PATHS.POST_DETAIL.replace(\":post_id\", res.post.PID)\r\n                );\r\n            } else {\r\n                NotificationManager.error(res.message, null, 600);\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Row style={{ justifyContent: \"center\" }}>\r\n                <Col lg={8}>\r\n                    <div className='ass1-section ass1-section__edit-post'>\r\n                        <div className='ass1-section__content'>\r\n                            <Form className='post-upload__form'>\r\n                                <Form.Group controlId='postUploadContent'>\r\n                                    <Form.Control\r\n                                        value={newPost.post_content}\r\n                                        onChange={handleChangeData(\r\n                                            \"post_content\"\r\n                                        )}\r\n                                        as='textarea'\r\n                                        rows={3}\r\n                                        placeholder='Bạn đang nghĩ gì ?'\r\n                                    />\r\n                                    <Form.File\r\n                                        id='postUploadFile'\r\n                                        ref={inputFile}\r\n                                        onChange={handleChangeImage}\r\n                                    />\r\n                                </Form.Group>\r\n                            </Form>\r\n                            <ListGroup horizontal className='post-upload__list'>\r\n                                <ListGroup.Item\r\n                                    action\r\n                                    variant='light'\r\n                                    onClick={onShowInputFile}\r\n                                >\r\n                                    <FontAwesomeIcon\r\n                                        icon={faImages}\r\n                                        className='icon-image'\r\n                                    />\r\n                                    <span>Tải ảnh lên</span>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item\r\n                                    action\r\n                                    variant='light'\r\n                                    onClick={handleShow}\r\n                                >\r\n                                    <FontAwesomeIcon\r\n                                        icon={faPaw}\r\n                                        className='icon-cate'\r\n                                    />\r\n                                    <span>Chủ đề</span>\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                            <hr />\r\n                            <div className='post-upload__categories'>\r\n                                {categoriesNewPost?.map((category, index) => {\r\n                                    return <span key={index}>#{category}</span>;\r\n                                })}\r\n                            </div>\r\n\r\n                            <div className='post-upload__image'>\r\n                                <img\r\n                                    ref={previewImage}\r\n                                    src={imageNotAvailable}\r\n                                    alt='post'\r\n                                />\r\n                            </div>\r\n                            <Button\r\n                                variant='primary'\r\n                                size='lg'\r\n                                block\r\n                                disabled={isLoading}\r\n                                onClick={isLoading ? null : handleCreateNewPost}\r\n                                className='post-upload__btn'\r\n                            >\r\n                                Đăng bài viết\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <PostUploadModal\r\n                show={show}\r\n                handleClose={handleClose}\r\n                getCategoriesNewPost={getCategoriesNewPost}\r\n            />\r\n            <LoadingChange isLoading={isLoading} text='Đang tải bài viết ...' />\r\n        </Container>\r\n    );\r\n}\r\n","import PostUpload from \"./PostUpload\";\r\nexport default PostUpload;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { faImages, faPaw } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n//\r\nexport default function PostEditForm({\r\n    post,\r\n    isLoading,\r\n    postEdit,\r\n    inputFile,\r\n    handleShow,\r\n    previewImage,\r\n    categoriesPostEdit,\r\n    onShowInputFile,\r\n    handleChangeData,\r\n    handleChangeImage,\r\n    handleUploadEditPost,\r\n}) {\r\n    return (\r\n        <div className='ass1-section ass1-section__edit-post'>\r\n            <div className='ass1-section__content'>\r\n                <Form className='post-upload__form'>\r\n                    <Form.Group controlId='postUploadContent'>\r\n                        <Form.Control\r\n                            value={postEdit.post_content}\r\n                            onChange={handleChangeData(\"post_content\")}\r\n                            as='textarea'\r\n                            rows={3}\r\n                            placeholder={postEdit.post_content}\r\n                        />\r\n                        <Form.File\r\n                            id='postUploadFile'\r\n                            ref={inputFile}\r\n                            onChange={handleChangeImage}\r\n                        />\r\n                    </Form.Group>\r\n                </Form>\r\n                <ListGroup horizontal className='post-upload__list'>\r\n                    <ListGroup.Item\r\n                        action\r\n                        variant='light'\r\n                        onClick={onShowInputFile}\r\n                    >\r\n                        <FontAwesomeIcon\r\n                            icon={faImages}\r\n                            className='icon-image'\r\n                        />\r\n                        <span>Tải ảnh lên</span>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item action variant='light' onClick={handleShow}>\r\n                        <FontAwesomeIcon icon={faPaw} className='icon-cate' />\r\n                        <span>Chủ đề</span>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n                <hr />\r\n                <div className='post-upload__categories'>\r\n                    {categoriesPostEdit?.map((category, index) => {\r\n                        return <span key={index}>#{category.tag_value}</span>;\r\n                    })}\r\n                </div>\r\n\r\n                <div className='post-upload__image'>\r\n                    <img\r\n                        ref={previewImage}\r\n                        src={\r\n                            post?.url_image || \"/images/no_image_available.jpg\"\r\n                        }\r\n                        alt='post'\r\n                    />\r\n                </div>\r\n                <Button\r\n                    block\r\n                    size='lg'\r\n                    variant='primary'\r\n                    className='post-upload__btn'\r\n                    disabled={isLoading}\r\n                    onClick={!isLoading ? handleUploadEditPost : null}\r\n                >\r\n                    {isLoading ? \"Đang đang bài ...\" : \"Đăng bài chỉnh sửa\"}\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import PostEdit from \"./PostEdit\";\r\nexport default PostEdit;\r\n","import React, { useEffect, useState, useCallback, useRef } from \"react\";\r\nimport \"../PostUpload/Style.Upload.scss\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    actFetchPostDetailAsync,\r\n    actEditPostAsync,\r\n} from \"../../store/post/actions\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { useCheckImageUrl, useAuth, useUserID } from \"../../utilities/hook\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport PostUploadModal from \"../../components/PostUpload/PostUpload.Modal\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { PATHS } from \"../../constants\";\r\nimport PostEditForm from \"../../components/PostEdit/PostEdit.Form\";\r\nimport LoadingChange from \"../../components/LoadingChange\";\r\n\r\n//\r\nexport default function PostEdit() {\r\n    useAuth();\r\n    const currUserID = useUserID();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const checkImageUrl = useCheckImageUrl;\r\n    //useRef\r\n    const inputFile = useRef(null);\r\n    const previewImage = useRef(null);\r\n    const postid = useParams().post_id;\r\n\r\n    // useState\r\n    const [show, setShow] = useState(false);\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [postEdit, setPostEdit] = useState({});\r\n    const [categoriesPostEdit, setCategoriesPostEdit] = useState([]);\r\n\r\n    // useSelector\r\n    const isLoading = useSelector((state) => state.App.isLoading);\r\n    const PostDetail = useSelector((state) => state.Posts.PostDetail);\r\n    const post = PostDetail.post;\r\n    const categories = PostDetail.categories;\r\n\r\n    // Show/Close modal\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    // Get State from Reducer\r\n    useEffect(() => {\r\n        if (!currUserID) return;\r\n        dispatch(actFetchPostDetailAsync({ postid }));\r\n    }, [dispatch, postid, currUserID]);\r\n\r\n    // Setup local state\r\n    useEffect(() => {\r\n        const cateID = categories?.map((category) => {\r\n            return category.tag_index;\r\n        });\r\n        const catePostEdit = categories?.map((category) => {\r\n            let { tag_index, tag_value } = category;\r\n            return { tag_index, tag_value };\r\n        });\r\n        setCategoriesPostEdit(catePostEdit);\r\n\r\n        setPostEdit({\r\n            postid,\r\n            url_image: post?.url_image,\r\n            obj_image: null,\r\n            category: cateID?.join(\",\"),\r\n            post_content: post?.post_content,\r\n        });\r\n    }, [post, categories, postid]);\r\n\r\n    const handleChangeData = useCallback(\r\n        (keyField) => (e) => {\r\n            setPostEdit({\r\n                ...postEdit,\r\n                [keyField]: e.target.value,\r\n            });\r\n        },\r\n        [postEdit]\r\n    );\r\n    //\r\n    const handleChangeImage = (e) => {\r\n        const file = e.target.files[0];\r\n        const preview = previewImage.current;\r\n        const isImage = checkImageUrl(file?.name);\r\n        if (isImage) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = (e) => {\r\n                preview.src = reader.result;\r\n                setPostEdit({\r\n                    ...postEdit,\r\n                    obj_image: file,\r\n                });\r\n            };\r\n\r\n            if (file) {\r\n                reader.readAsDataURL(file);\r\n            }\r\n        } else {\r\n            e.target.value = \"\";\r\n            preview.src = postEdit?.url_image;\r\n            NotificationManager.error(\"Hình ảnh không hợp lệ !\", null, 600);\r\n        }\r\n    };\r\n\r\n    const onShowInputFile = () => {\r\n        if (inputFile && inputFile.current) {\r\n            inputFile.current.click();\r\n        }\r\n    };\r\n\r\n    const getCategoriesNewPost = (categories) => {\r\n        if (typeof categories === \"object\" && categories !== null) {\r\n            const listCategories = Object.entries(categories);\r\n            const newCategoriesPostEdit = listCategories?.map((category) => {\r\n                return { tag_index: category[0], tag_value: category[1] };\r\n            });\r\n            const listNewIdCates = listCategories?.map(\r\n                (category) => category[0]\r\n            );\r\n            setPostEdit({\r\n                ...postEdit,\r\n                category: listNewIdCates.join(\",\"),\r\n            });\r\n            setCategoriesPostEdit(newCategoriesPostEdit);\r\n        }\r\n    };\r\n\r\n    const handleUploadEditPost = () => {\r\n        const { postid, category, post_content, obj_image, url_image } =\r\n            postEdit;\r\n        setIsEdit(true);\r\n        dispatch(\r\n            actEditPostAsync({\r\n                postid,\r\n                category,\r\n                post_content,\r\n                obj_image,\r\n                url_image,\r\n            })\r\n        ).then((res) => {\r\n            setIsEdit(false);\r\n            if (res.ok) {\r\n                NotificationManager.success(res.message, null, 600);\r\n                history.push(PATHS.POST_DETAIL.replace(\":post_id\", postid));\r\n            } else {\r\n                NotificationManager.error(res.message, null, 600);\r\n            }\r\n        });\r\n    };\r\n\r\n    const injectedPropsEditForm = {\r\n        post,\r\n        isLoading,\r\n        postEdit,\r\n        inputFile,\r\n        handleShow,\r\n        previewImage,\r\n        categoriesPostEdit,\r\n        onShowInputFile,\r\n        handleChangeData,\r\n        handleChangeImage,\r\n        handleUploadEditPost,\r\n    };\r\n    return (\r\n        <Container>\r\n            <Row style={{ justifyContent: \"center\" }}>\r\n                <Col lg={8}>\r\n                    <PostEditForm {...injectedPropsEditForm} />\r\n                </Col>\r\n            </Row>\r\n            <PostUploadModal\r\n                show={show}\r\n                handleClose={handleClose}\r\n                categoriesPostEdit={categoriesPostEdit}\r\n                getCategoriesNewPost={getCategoriesNewPost}\r\n            />\r\n            <LoadingChange\r\n                isLoading={isLoading}\r\n                text={isEdit ? \"Đang chỉnh sửa ...\" : \"Đang tải ...\"}\r\n            />\r\n        </Container>\r\n    );\r\n}\r\n","import PostDelete from \"./PostDelete\";\r\nexport default PostDelete;\r\n","import React from \"react\";\r\nimport \"../ChangePassWord/Style.Password.scss\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useAuth } from \"../../utilities/hook\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport { actDeletePostAsync } from \"../../store/post/actions\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { PATHS } from \"../../constants\";\r\nimport { EMAIL_VALIDATOR } from \"../../constants/FormValidator\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport LoadingChange from \"../../components/LoadingChange\";\r\n// default value init\r\n\r\nexport default function PostDelete() {\r\n    useAuth();\r\n    const postid = useParams().post_id;\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n    } = useForm();\r\n\r\n    const isLoading = useSelector((state) => state.App.isLoading);\r\n    const currentUser = useSelector((state) => state.User.currentUser);\r\n    const email = currentUser?.email;\r\n    const userid = currentUser?.USERID;\r\n\r\n    const handleDeletePost = ({ email: emailConfirm }) => {\r\n        if (emailConfirm.trim() === email) {\r\n            dispatch(actDeletePostAsync({ postid })).then((res) => {\r\n                if (res.ok) {\r\n                    NotificationManager.success(\"Xóa thành công\", null, 1000);\r\n                    history.push(PATHS.USER_DETAIL.replace(\":user_id\", userid));\r\n                } else {\r\n                    NotificationManager.success(\r\n                        \"Có lỗi xảy ra, yêu cầu nhập lại email\",\r\n                        null,\r\n                        1200\r\n                    );\r\n                }\r\n            });\r\n        } else {\r\n            NotificationManager.error(\"Email không chính xác\", null, 1000);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <main>\r\n            <div className='ass1-login'>\r\n                <div className='ass1-login__content'>\r\n                    <p>Xác nhận email</p>\r\n                    <div className='ass1-login__form'>\r\n                        <form action='#'>\r\n                            <div className='form__group'>\r\n                                <input\r\n                                    type='text'\r\n                                    className='form-control'\r\n                                    placeholder='Nhập email của bạn'\r\n                                    {...register(\"email\", {\r\n                                        required: true,\r\n                                        pattern: EMAIL_VALIDATOR.pattern,\r\n                                    })}\r\n                                />\r\n                                {errors?.email?.type === \"required\" && (\r\n                                    <span className='message'>\r\n                                        {EMAIL_VALIDATOR.messInvalid}\r\n                                    </span>\r\n                                )}\r\n                                {errors?.email?.type === \"pattern\" && (\r\n                                    <span className='message'>\r\n                                        {EMAIL_VALIDATOR.messInvalid}\r\n                                    </span>\r\n                                )}\r\n                            </div>\r\n\r\n                            <div className='ass1-login__send justify-content-center'>\r\n                                <Button\r\n                                    variant='success'\r\n                                    onClick={handleSubmit(handleDeletePost)}\r\n                                >\r\n                                    Xác nhận\r\n                                </Button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <LoadingChange isLoading={isLoading} text={\"Đang xóa ...\"} />\r\n        </main>\r\n    );\r\n}\r\n","import React, { useCallback, useState, useEffect } from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    actHandleChangeSearchText,\r\n    actionHandleOnSelectSort,\r\n} from \"../../store/user/actions\";\r\nimport { useIcons } from \"../../utilities/hook\";\r\n\r\nexport default function DashboardForm({ isEdit, handleSetEdit }) {\r\n    const Icons = useIcons();\r\n    const dispatch = useDispatch();\r\n    const searchText = useSelector((state) => state.User.members.searchText);\r\n    const orderBy = useSelector((state) => state.User.members.orderBy);\r\n    const orderDir = useSelector((state) => state.User.members.orderDir);\r\n\r\n    const [localText, setLocalText] = useState(searchText);\r\n    const [orderDirLocal, setOrderDirLocal] = useState(orderDir);\r\n    const [orderByLocal, setOrderByLocal] = useState(orderBy);\r\n\r\n    // SEARCH VALUE\r\n    useEffect(() => {\r\n        dispatch(actHandleChangeSearchText(localText));\r\n    }, [dispatch, localText]);\r\n\r\n    const handleChangeData = useCallback((e) => {\r\n        setLocalText(e.target.value);\r\n    }, []);\r\n    const handleClearText = useCallback(() => {\r\n        setLocalText(\"\");\r\n    }, []);\r\n\r\n    // SORT VALUE\r\n    useEffect(() => {\r\n        dispatch(\r\n            actionHandleOnSelectSort({\r\n                orderBy: orderByLocal,\r\n                orderDir: orderDirLocal,\r\n            })\r\n        );\r\n    }, [orderByLocal, orderDirLocal, dispatch]);\r\n\r\n    const onChangeSelect = useCallback((e) => {\r\n        setOrderByLocal(e.target.value);\r\n    }, []);\r\n\r\n    const onChangeTypeSort = (keyField) => () => {\r\n        setOrderDirLocal(keyField);\r\n    };\r\n\r\n    return (\r\n        <Form className='dashboard__form'>\r\n            <Form.Row>\r\n                <Col xs={6}>\r\n                    <InputGroup>\r\n                        <FormControl\r\n                            value={localText}\r\n                            onChange={handleChangeData}\r\n                            placeholder='Search members ...'\r\n                            aria-label='Search members'\r\n                            aria-describedby='basic-addon2'\r\n                        />\r\n                        <InputGroup.Append>\r\n                            <Button\r\n                                onClick={handleClearText}\r\n                                variant='outline-secondary'\r\n                            >\r\n                                Clear\r\n                            </Button>\r\n                        </InputGroup.Append>\r\n                    </InputGroup>\r\n                </Col>\r\n                <Col xs={3} md={2}>\r\n                    <Form.Control\r\n                        as='select'\r\n                        onChange={onChangeSelect}\r\n                        value={orderBy}\r\n                    >\r\n                        <option value='name'>Name</option>\r\n                        <option value='active'>Active</option>\r\n                    </Form.Control>\r\n                </Col>\r\n                <Col xs={3} className='dashboard__form-icon'>\r\n                    <div\r\n                        className={`form-icon form-icon__sortUp ${\r\n                            orderDirLocal === \"asc\" ? \"active\" : \"\"\r\n                        }`}\r\n                        onClick={onChangeTypeSort(\"asc\")}\r\n                    >\r\n                        <Icons.SortAmountUp />\r\n                    </div>\r\n                    <div\r\n                        className={`form-icon form-icon__sortDown ${\r\n                            orderDirLocal === \"desc\" ? \"active\" : \"\"\r\n                        }`}\r\n                        onClick={onChangeTypeSort(\"desc\")}\r\n                    >\r\n                        <Icons.SortAmountDown />\r\n                    </div>\r\n                    <div\r\n                        className={`form-icon form-icon__setting ${\r\n                            isEdit ? \"isEdit\" : \"\"\r\n                        }`}\r\n                        onClick={handleSetEdit}\r\n                    >\r\n                        <Icons.UsersCog />\r\n                    </div>\r\n                </Col>\r\n            </Form.Row>\r\n        </Form>\r\n    );\r\n}\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst orderBy = (state) => state.orderBy;\r\nconst orderDir = (state) => state.orderDir;\r\nconst searchText = (state) => state.searchText;\r\nconst listMembers = (state) => state.list;\r\n\r\nconst listMembersSearchAndSort = createSelector(\r\n    orderBy,\r\n    orderDir,\r\n    searchText,\r\n    listMembers,\r\n    (orderBy, orderDir, searchText, listMembers) => {\r\n        if (orderBy === \"name\") orderBy = \"fullname\";\r\n        if (orderBy === \"active\") orderBy = \"status\";\r\n        return listMembers\r\n            .filter((member) => {\r\n                let memberName = member.fullname.toLocaleLowerCase();\r\n                let searchName = searchText.toLocaleLowerCase();\r\n                return memberName.search(searchName) !== -1;\r\n            })\r\n            .sort(function (a, b) {\r\n                let indexNumber = 1; // desc\r\n                if (orderDir === \"asc\") indexNumber = -1;\r\n\r\n                if (a[orderBy] !== b[orderBy]) {\r\n                    return a[orderBy] > b[orderBy] ? indexNumber : -indexNumber;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            });\r\n    }\r\n);\r\n\r\nexport default listMembersSearchAndSort;\r\n","import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport { useIcons } from \"../../utilities/hook\";\r\nimport { useSelector } from \"react-redux\";\r\nimport listMemberSearchSort from \"../../store/user/selector/listMemberSearchSort\";\r\nexport default function DashboardTable({ isEdit = false, setInfoUserEdit }) {\r\n    const Icons = useIcons();\r\n    const listMembers = useSelector((state) =>\r\n        listMemberSearchSort(state.User.members)\r\n    );\r\n\r\n    return (\r\n        <Table striped bordered hover className='dashboard__table'>\r\n            <thead>\r\n                <tr>\r\n                    <th style={{ textAlign: \"center\" }}>\r\n                        {isEdit ? \"\" : \"Stt\"}\r\n                    </th>\r\n                    <th>Fullname</th>\r\n                    <th>Email</th>\r\n                    <th>Trạng thái</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {listMembers?.map((member, index) => {\r\n                    return (\r\n                        <tr key={index}>\r\n                            <td\r\n                                className={\r\n                                    !isEdit\r\n                                        ? \"dashboard__table-stt\"\r\n                                        : \"dashboard__table-edit--user\"\r\n                                }\r\n                                onClick={\r\n                                    isEdit ? setInfoUserEdit(member) : null\r\n                                }\r\n                            >\r\n                                {!isEdit ? index : <Icons.SettingUser />}\r\n                            </td>\r\n                            <td>{member.fullname}</td>\r\n                            <td>{member.email}</td>\r\n                            <td className='dashboard__table-active'>\r\n                                {member.status === \"1\" ? (\r\n                                    <span className='user__active'>\r\n                                        <Icons.Unlock /> Active\r\n                                    </span>\r\n                                ) : (\r\n                                    <span className='user__deactive'>\r\n                                        <Icons.Lock /> Deactive\r\n                                    </span>\r\n                                )}\r\n                            </td>\r\n                        </tr>\r\n                    );\r\n                })}\r\n            </tbody>\r\n        </Table>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport { actActiveDeactiveUserAsync } from \"../../store/user/actions\";\r\nexport default function DashboardModal({ userEdit, setInfoUserEdit }) {\r\n    const dispatch = useDispatch();\r\n    const [showModal, setShowModal] = useState(false);\r\n    const isActiveUser = userEdit?.status === \"1\";\r\n\r\n    const isLoading = useSelector((state) => state.App.isLoading);\r\n\r\n    useEffect(() => {\r\n        if (userEdit) {\r\n            setShowModal(true);\r\n        } else {\r\n            setShowModal(false);\r\n        }\r\n    }, [userEdit]);\r\n\r\n    const closeMoldalUserEdit = () => {\r\n        setInfoUserEdit(null)();\r\n    };\r\n\r\n    const handleActiveDeactiveUser = () => {\r\n        if (userEdit) {\r\n            dispatch(\r\n                actActiveDeactiveUserAsync({\r\n                    userid: userEdit.USERID,\r\n                    currentStatus: userEdit.status,\r\n                })\r\n            ).then((res) => {\r\n                if (res.ok) {\r\n                    NotificationManager.success(res.message, null, 800);\r\n                } else {\r\n                    NotificationManager.error(res.message, null, 800);\r\n                }\r\n                closeMoldalUserEdit();\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            show={showModal}\r\n            onHide={closeMoldalUserEdit}\r\n            animation={false}\r\n            size='sm'\r\n            centered\r\n        >\r\n            <Modal.Header style={{ padding: \"8px\" }} closeButton></Modal.Header>\r\n            <Modal.Body style={{ textAlign: \"center\", padding: \"10px 0px\" }}>\r\n                <Alert variant={isActiveUser ? \"danger\" : \"success\"}>\r\n                    {isActiveUser ? \"Deactive\" : \"Active\"}: {userEdit?.fullname}\r\n                </Alert>\r\n                <Button\r\n                    size='sm'\r\n                    variant={isActiveUser ? \"danger\" : \"success\"}\r\n                    onClick={isLoading ? null : handleActiveDeactiveUser}\r\n                    disabled={isLoading}\r\n                >\r\n                    {isActiveUser ? \"Deactive\" : \"Active\"}\r\n                </Button>\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n}\r\n","import Dashboard from \"./Dashboard\";\r\nexport default Dashboard;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport \"./dashboard.scss\";\r\n//\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Button from \"react-bootstrap/Button\";\r\n// component app\r\nimport DashboardForm from \"../../components/Dashboard/Dashboard.Form\";\r\nimport DashboardTable from \"../../components/Dashboard/Dashboard.Table\";\r\nimport DashboardModal from \"../../components/Dashboard/Dashboard.Modal\";\r\nimport OnToTop from \"../../components/OnToTop\";\r\n//\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actFetchListMemberAsync } from \"../../store/user/actions\";\r\nimport { useAdmin } from \"../../utilities/hook\";\r\nexport default function Dashboard() {\r\n    useAdmin();\r\n    const dispatch = useDispatch();\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [userEdit, setUserEdit] = useState(null);\r\n    //\r\n    const isLoading = useSelector((state) => state.App.isLoading);\r\n    const members = useSelector((state) => state.User.members);\r\n    const list = members.list;\r\n    const page = members.currPage;\r\n    const total = members.total;\r\n\r\n    const handleLoadMoreMember = useCallback(() => {\r\n        if (isLoading) return;\r\n        dispatch(actFetchListMemberAsync({ currPage: page + 1 }));\r\n    }, [page, dispatch, isLoading]);\r\n\r\n    //\r\n\r\n    const handleSetEdit = () => {\r\n        setIsEdit(!isEdit);\r\n    };\r\n\r\n    const setInfoUserEdit = (userInfo) => () => {\r\n        setUserEdit(userInfo);\r\n    };\r\n    //\r\n\r\n    const propsDashboardForm = { isEdit, handleSetEdit };\r\n    const propsDashboardTable = { isEdit, setInfoUserEdit };\r\n    const propsDashboardModal = {\r\n        userEdit,\r\n        setInfoUserEdit,\r\n    };\r\n    return (\r\n        <Container className='dashboard'>\r\n            <Row>\r\n                <DashboardForm {...propsDashboardForm} />\r\n            </Row>\r\n\r\n            <Row>\r\n                <DashboardTable {...propsDashboardTable} />\r\n\r\n                {total !== list.length ? (\r\n                    <div className='dashboard__load-more'>\r\n                        <Button\r\n                            variant='outline-secondary'\r\n                            disabled={isLoading}\r\n                            onClick={isLoading ? null : handleLoadMoreMember}\r\n                        >\r\n                            {isLoading ? \"Đang tải ...\" : \"Xem thêm\"}\r\n                        </Button>\r\n                    </div>\r\n                ) : null}\r\n            </Row>\r\n\r\n            <DashboardModal {...propsDashboardModal} />\r\n            <OnToTop />\r\n        </Container>\r\n    );\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { PATHS } from \"../../constants\";\r\nimport { useSelector } from \"react-redux\";\r\n//\r\nexport default function useAdmin() {\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const token = useSelector((state) => state.Auth.token);\r\n    const currentUser = useSelector((state) => state.User.currentUser);\r\n    const isAdmin = currentUser?.permission === \"admin\";\r\n    useEffect(() => {\r\n        if (token === \"\" || !token || !isAdmin) {\r\n            history.push(PATHS.LOGIN);\r\n        }\r\n    }, [location, history, token, isAdmin]);\r\n}\r\n","import { PATHS } from \"../constants\";\r\nimport HomePage from \"../pages/HomePage\";\r\nimport Login from \"../pages/Login\";\r\nimport PostCategories from \"../pages/PostCategories\";\r\nimport PostDetail from \"../pages/PostDetail\";\r\nimport UserProfile from \"../pages/UserProfile\";\r\nimport SearchResult from \"../pages/SearchResult\";\r\nimport UserDetail from \"../pages/UserDetail\";\r\nimport ChangePassWord from \"../pages/ChangePassWord\";\r\nimport Register from \"../pages/Register\";\r\nimport PostUpload from \"../pages/PostUpload\";\r\nimport PostEdit from \"../pages/PostEdit\";\r\nimport PostDelete from \"../pages/PostDelete\";\r\nimport Dashboard from \"../pages/Dashboard\";\r\n//\r\nconst ROUTERS = [\r\n    {\r\n        path: PATHS.HOMEPAGE,\r\n        exact: true,\r\n        Component: HomePage,\r\n    },\r\n    {\r\n        path: PATHS.LOGIN,\r\n        exact: true,\r\n        Component: Login,\r\n    },\r\n    {\r\n        path: PATHS.POST_LIST_CATEGORY,\r\n        exact: true,\r\n        Component: PostCategories,\r\n    },\r\n    {\r\n        path: PATHS.POST_DETAIL,\r\n        exact: true,\r\n        Component: PostDetail,\r\n    },\r\n    {\r\n        path: PATHS.USER_PROFILE,\r\n        exact: true,\r\n        Component: UserProfile,\r\n    },\r\n    {\r\n        path: PATHS.SEARCH_RESULT,\r\n        exact: true,\r\n        Component: SearchResult,\r\n    },\r\n    {\r\n        path: PATHS.USER_DETAIL,\r\n        exact: true,\r\n        Component: UserDetail,\r\n    },\r\n    {\r\n        path: PATHS.CHANGE_PASSWORD,\r\n        exact: true,\r\n        Component: ChangePassWord,\r\n    },\r\n    {\r\n        path: PATHS.REGISTER,\r\n        exact: true,\r\n        Component: Register,\r\n    },\r\n    {\r\n        path: PATHS.POST_CREATE,\r\n        exact: true,\r\n        Component: PostUpload,\r\n    },\r\n    {\r\n        path: PATHS.POST_EDIT,\r\n        exact: true,\r\n        Component: PostEdit,\r\n    },\r\n    {\r\n        path: PATHS.POST_DELETE,\r\n        exact: true,\r\n        Component: PostDelete,\r\n    },\r\n    {\r\n        path: PATHS.ADMIN_DASHBOARD,\r\n        exact: true,\r\n        Component: Dashboard,\r\n    },\r\n];\r\nexport default ROUTERS;\r\n","import React from \"react\";\r\nimport { NotificationContainer } from \"react-notifications\";\r\nimport \"./notificaton.scss\";\r\nexport default function Notification() {\r\n    return <NotificationContainer />;\r\n}\r\n","import React, { useState, useCallback } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { PATHS } from \"../../constants\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function HeaderNav() {\r\n    const history = useHistory();\r\n    const matchCategory = useRouteMatch(PATHS.POST_LIST_CATEGORY);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const categories = useSelector((state) => state.Categories.listCategories);\r\n\r\n    const handleOnChangeCategory = useCallback(\r\n        (id) => () => {\r\n            setModalShow(false);\r\n            history.push(PATHS.POST_LIST_CATEGORY.replace(\":category_id\", id));\r\n        },\r\n        [history]\r\n    );\r\n    return (\r\n        <div className='header__nav'>\r\n            <Button\r\n                variant='outline-light'\r\n                className='header__btn'\r\n                onClick={() => setModalShow(true)}\r\n            >\r\n                Categories\r\n            </Button>\r\n\r\n            <Modal\r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n                animation={false}\r\n                size='lg'\r\n            >\r\n                <Modal.Header closeButton></Modal.Header>\r\n                <Modal.Body>\r\n                    <Row>\r\n                        {categories?.map((category) => {\r\n                            const { text, id } = category;\r\n                            const currCateID = Number(\r\n                                matchCategory?.params?.category_id\r\n                            );\r\n                            return (\r\n                                <Col xs={6} md={4} key={id} className='mb-4'>\r\n                                    <Form.Check\r\n                                        onChange={handleOnChangeCategory(id)}\r\n                                        checked={\r\n                                            id === currCateID ? true : false\r\n                                        }\r\n                                        custom\r\n                                        value={id}\r\n                                        inline\r\n                                        label={text}\r\n                                        type='radio'\r\n                                        id={`custom-inline-checkbox-${id}`}\r\n                                    />\r\n                                </Col>\r\n                            );\r\n                        })}\r\n                    </Row>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { PATHS } from \"../../constants\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nexport default function HeaderSearch() {\r\n    const history = useHistory();\r\n    const [querySearch, setQuerySearch] = useState(\"\");\r\n\r\n    const onChangeSearch = (e) => {\r\n        setQuerySearch(e.target.value);\r\n    };\r\n\r\n    const onSubmitSearch = (e) => {\r\n        e.preventDefault();\r\n        history.push(`${PATHS.SEARCH_RESULT}?q=${querySearch}`);\r\n    };\r\n    return (\r\n        <div className='ass1-header__search'>\r\n            <form action='#' onSubmit={onSubmitSearch}>\r\n                <label>\r\n                    <input\r\n                        value={querySearch}\r\n                        onChange={onChangeSearch}\r\n                        type='search'\r\n                        name='search-text'\r\n                        className='form-control'\r\n                        placeholder='Nhập từ khóa ...'\r\n                    />\r\n                    <i>\r\n                        <FontAwesomeIcon icon={faSearch} />\r\n                    </i>\r\n                </label>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PATHS } from \"../../constants\";\r\nexport default function LogoApp() {\r\n    return (\r\n        <Link to={PATHS.HOMEPAGE} className='ass1-logo'>\r\n            Meme App\r\n        </Link>\r\n    );\r\n}\r\n","import Header from \"./Header\";\r\nexport default Header;\r\n","import React, { useEffect, useCallback } from \"react\";\r\nimport \"./style.header.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PATHS } from \"../../constants\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport HeaderNav from \"./Header.Nav\";\r\nimport HeaderSearch from \"./Header.Search\";\r\nimport LogoApp from \"../LogoApp\";\r\nimport { actFetchUserByIDAsync } from \"../../store/user/actions\";\r\nimport { actLogoutSuccess } from \"../../store/auth/actions\";\r\nimport { useUserID, useIcons } from \"../../utilities/hook\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nexport default function Header() {\r\n    const userid = useUserID();\r\n    const Icons = useIcons();\r\n    const dispatch = useDispatch();\r\n    const currentUser = useSelector((state) => state.User.currentUser);\r\n    const isAdmin = currentUser?.permission === \"admin\";\r\n    useEffect(() => {\r\n        if (userid) {\r\n            dispatch(actFetchUserByIDAsync({ userid }));\r\n        }\r\n    }, [userid, dispatch]);\r\n\r\n    const handleLogout = useCallback(() => {\r\n        dispatch(actLogoutSuccess());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <header>\r\n            <div className='ass1-header'>\r\n                <Container className='header__container'>\r\n                    <LogoApp />\r\n                    <div style={{ display: \"flex\" }}>\r\n                        <HeaderSearch />\r\n                    </div>\r\n\r\n                    <HeaderNav />\r\n\r\n                    <Link to={PATHS.POST_CREATE} className='header__btn'>\r\n                        <Icons.Upload /> Upload\r\n                    </Link>\r\n\r\n                    {isAdmin ? (\r\n                        <Link\r\n                            to={PATHS.ADMIN_DASHBOARD}\r\n                            className='header__btn'\r\n                        >\r\n                            <Icons.Tasks /> Members\r\n                        </Link>\r\n                    ) : null}\r\n\r\n                    {!currentUser ? (\r\n                        <Link to={PATHS.LOGIN} className='header__btn'>\r\n                            Login\r\n                        </Link>\r\n                    ) : (\r\n                        <div className='wrapper__user'>\r\n                            <Link\r\n                                className='post_item_avatar'\r\n                                to={PATHS.USER_DETAIL.replace(\r\n                                    \":user_id\",\r\n                                    currentUser?.USERID\r\n                                )}\r\n                            >\r\n                                <img src={currentUser?.profilepicture} alt='' />\r\n                            </Link>\r\n                            <Link\r\n                                to={PATHS.USER_DETAIL.replace(\r\n                                    \":user_id\",\r\n                                    currentUser?.USERID\r\n                                )}\r\n                            >\r\n                                {currentUser?.fullname}\r\n                            </Link>\r\n                            <ListGroup className='user__info' variant='light'>\r\n                                <ListGroup.Item className='user__info-profile'>\r\n                                    <Link to={PATHS.USER_PROFILE}>Profile</Link>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item onClick={handleLogout}>\r\n                                    Logout\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </div>\r\n                    )}\r\n                </Container>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer>\r\n            <div className='ass1-footer'>\r\n                <div className='container'>\r\n                    <p className='text-center'>Cộng đồng chế ảnh VietNam</p>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n","import \"./App.scss\";\r\nimport React, { useEffect } from \"react\";\r\nimport ROUTERS from \"./routers\";\r\nimport Notification from \"./components/Shared/Notification\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { actFetchCategoriesAsync } from \"./store/category/actions\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nfunction App() {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(actFetchCategoriesAsync());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div className='container-app'>\r\n            <Header />\r\n            <Switch>\r\n                {ROUTERS &&\r\n                    ROUTERS.map((route, index) => {\r\n                        return (\r\n                            <Route\r\n                                key={index}\r\n                                path={route.path}\r\n                                exact={route.exact}\r\n                            >\r\n                                <route.Component />\r\n                            </Route>\r\n                        );\r\n                    })}\r\n            </Switch>\r\n\r\n            <Footer />\r\n            <Notification />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import \"./assets/css/style.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"react-notifications/lib/notifications.css\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport Store from \"./store\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n    <Provider store={Store}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}